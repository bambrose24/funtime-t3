
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * Please import the `PrismaClient` class from the `client.ts` file instead.
 */

import * as runtime from "@prisma/client/runtime/client"
import type * as Prisma from "./prismaNamespace"


const config: runtime.GetPrismaClientConfig = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client"
    },
    "output": {
      "value": "/Users/bambrose/Documents/hacking/funtime-t3/packages/api/src/generated/prisma-client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "client"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [
      "driverAdapters",
      "queryCompiler"
    ],
    "sourceFilePath": "/Users/bambrose/Documents/hacking/funtime-t3/packages/api/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.10.1",
  "engineVersion": "9b628578b3b7cae625e8c927178f15a170e74a9c",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider        = \"prisma-client\"\n  output          = \"../src/generated/prisma-client\"\n  previewFeatures = [\"queryCompiler\", \"driverAdapters\"]\n}\n\ndatasource db {\n  provider  = \"postgresql\"\n  url       = env(\"DATABASE_URL\")\n  directUrl = env(\"DIRECT_URL\")\n}\n\nmodel EmailLogs {\n  email_log_id  String        @id @default(cuid())\n  league_id     Int\n  member_id     Int\n  email_type    EmailType\n  ts            DateTime      @default(now()) @db.Timestamptz(6)\n  week          Int?\n  resend_id     String\n  leagues       leagues       @relation(fields: [league_id], references: [league_id], onUpdate: Restrict, onDelete: Cascade)\n  leaguemembers leaguemembers @relation(fields: [member_id], references: [membership_id], onDelete: Cascade)\n\n  @@index([league_id], map: \"idx_emaillogs_league_id\")\n  @@index([league_id, member_id], map: \"idx_emaillogs_league_member\")\n  @@index([league_id, member_id, week], map: \"idx_emaillogs_league_member_week\")\n  @@index([league_id, week], map: \"idx_emaillogs_league_week\")\n  @@index([member_id], map: \"idx_emaillogs_member_id\")\n  @@index([member_id, week], map: \"idx_emaillogs_member_week\")\n  @@index([resend_id], map: \"idx_emaillogs_resend_id\")\n  @@index([week], map: \"idx_emaillogs_week\")\n}\n\nmodel WeekWinners {\n  id            Int           @id(map: \"idx_184XX_primary\") @default(autoincrement())\n  league_id     Int\n  membership_id Int\n  week          Int\n  correct_count Int\n  score_diff    Int\n  leagues       leagues       @relation(fields: [league_id], references: [league_id], onDelete: Cascade)\n  leaguemembers leaguemembers @relation(fields: [membership_id], references: [membership_id], onDelete: Cascade)\n\n  @@index([league_id, membership_id], map: \"idx_184XX_league_and_membership\")\n  @@index([league_id], map: \"idx_184XX_league_id\")\n  @@index([membership_id], map: \"idx_184XX_membership_id\")\n}\n\nmodel games {\n  gid                               Int      @id(map: \"idx_18403_primary\") @default(autoincrement())\n  season                            Int\n  week                              Int\n  ts                                DateTime @db.Timestamptz(6)\n  home                              Int\n  away                              Int\n  homescore                         Int?     @default(0)\n  awayscore                         Int?     @default(0)\n  done                              Boolean? @default(false)\n  winner                            Int?     @default(0)\n  international                     Boolean? @default(false)\n  seconds                           Int?\n  current_record                    String?  @default(\"0-0,0-0\") @db.VarChar(50)\n  is_tiebreaker                     Boolean?\n  homerecord                        String?  @db.VarChar(10)\n  awayrecord                        String?  @db.VarChar(10)\n  current_quarter_seconds_remaining Int?\n  current_quarter                   Int?\n  msf_id                            Int?\n  espn_id                           Int?     @unique\n  teams_games_homeToteams           teams    @relation(\"games_homeToteams\", fields: [home], references: [teamid], onUpdate: Restrict, map: \"games_ibfk_1\")\n  teams_games_awayToteams           teams    @relation(\"games_awayToteams\", fields: [away], references: [teamid], onUpdate: Restrict, map: \"games_ibfk_2\")\n  picks                             picks[]\n\n  @@index([away], map: \"idx_18403_away\")\n  @@index([home], map: \"idx_18403_home\")\n  @@index([msf_id], map: \"idx_18403_msf_id\")\n  @@index([espn_id])\n  @@index([season], map: \"idx_18403_season\")\n  @@index([ts], map: \"idx_18403_ts\")\n  @@index([week], map: \"idx_18403_week\")\n}\n\nmodel leaguemembers {\n  membership_id  Int              @id(map: \"idx_18414_primary\") @default(autoincrement())\n  league_id      Int\n  user_id        Int\n  ts             DateTime         @default(now()) @db.Timestamptz(6)\n  role           MemberRole?      @default(player)\n  paid           Boolean?         @default(false)\n  EmailLogs      EmailLogs[]\n  WeekWinners    WeekWinners[]\n  people         people           @relation(fields: [user_id], references: [uid], onDelete: Cascade, onUpdate: Restrict, map: \"leaguemembers_ibfk_1\")\n  leagues        leagues          @relation(fields: [league_id], references: [league_id], onUpdate: Restrict, onDelete: Cascade, map: \"leaguemembers_ibfk_2\")\n  leaguemessages leaguemessages[]\n  picks          picks[]\n  superbowl      superbowl[]\n\n  @@index([league_id], map: \"idx_18414_league_id\")\n  @@index([paid], map: \"idx_18414_paid\")\n  @@index([role], map: \"idx_18414_role\")\n  @@index([ts], map: \"idx_18414_ts\")\n  @@index([user_id], map: \"idx_18414_user_id\")\n}\n\nmodel leaguemessages {\n  message_id    String        @id @default(cuid())\n  content       String\n  member_id     Int\n  league_id     Int\n  week          Int?\n  message_type  MessageType\n  createdAt     DateTime      @default(now())\n  status        MessageStatus @default(PUBLISHED)\n  leagues       leagues       @relation(fields: [league_id], references: [league_id], onDelete: Cascade)\n  leaguemembers leaguemembers @relation(fields: [member_id], references: [membership_id], onDelete: Cascade)\n\n  @@index([createdAt])\n  @@index([league_id])\n  @@index([league_id, member_id])\n  @@index([league_id, message_type])\n  @@index([league_id, message_type, status])\n  @@index([member_id])\n  @@index([message_type])\n}\n\nmodel leagues {\n  league_id             Int              @id(map: \"idx_18422_primary\") @default(autoincrement())\n  created_by_user_id    Int\n  name                  String\n  created_time          DateTime         @default(now()) @db.Timestamptz(6)\n  season                Int\n  late_policy           LatePolicy?      @default(allow_late_whole_week)\n  pick_policy           PickPolicy?      @default(choose_winner)\n  reminder_policy       ReminderPolicy?  @default(three_hours_before)\n  scoring_type          ScoringType?     @default(game_winner)\n  share_code            String?          @unique @default(cuid())\n  superbowl_competition Boolean?         @default(true)\n  prior_league_id       Int?\n  status                LeagueStatus     @default(not_started)\n  EmailLogs             EmailLogs[]\n  WeekWinners           WeekWinners[]\n  leaguemembers         leaguemembers[]\n  leaguemessages        leaguemessages[]\n  people                people           @relation(fields: [created_by_user_id], references: [uid], onUpdate: Restrict, map: \"leagues_ibfk_1\")\n  prior_league          leagues?         @relation(\"leaguesToleagues\", fields: [prior_league_id], references: [league_id])\n  future_leagues        leagues[]        @relation(\"leaguesToleagues\")\n\n  @@index([created_by_user_id], map: \"idx_18422_created_by_user_id\")\n  @@index([prior_league_id])\n  @@index([created_time], map: \"idx_18422_created_time\")\n  @@index([name], map: \"idx_18422_name\")\n  @@index([season], map: \"idx_18422_season\")\n  @@index([share_code], map: \"idx_share_code\")\n}\n\nmodel people {\n  uid              Int             @id(map: \"idx_18430_primary\") @default(autoincrement())\n  username         String          @db.VarChar(255)\n  fname            String          @db.VarChar(255)\n  lname            String          @db.VarChar(255)\n  email            String          @unique @db.VarChar(255)\n  season           Int\n  email2           String?         @db.VarChar(255)\n  google_photo_url String?\n  google_email     String?\n  google_userid    String?\n  supabase_id      String?         @unique @db.VarChar(255)\n  leaguemembers    leaguemembers[]\n  leagues          leagues[]\n  picks            picks[]\n\n  @@index([email], map: \"idx_18430_email_index\")\n  @@index([season], map: \"idx_18430_season\")\n  @@index([supabase_id], map: \"idx_18430_supabase_id\")\n}\n\nmodel picks {\n  pickid        Int            @id(map: \"idx_18437_primary\") @default(autoincrement())\n  uid           Int\n  season        Int\n  week          Int\n  gid           Int\n  winner        Int?           @default(0)\n  loser         Int?           @default(0)\n  score         Int?           @default(0)\n  ts            DateTime       @default(now()) @db.Timestamptz(6)\n  correct       Int?           @default(0)\n  done          Int?           @default(0)\n  is_random     Boolean?\n  member_id     Int?\n  games         games          @relation(fields: [gid], references: [gid], onUpdate: Restrict, map: \"picks_ibfk_1\")\n  people        people         @relation(fields: [uid], references: [uid], onDelete: Cascade, map: \"picks_ibfk_2\")\n  leaguemembers leaguemembers? @relation(fields: [member_id], references: [membership_id], onDelete: Cascade, onUpdate: Restrict, map: \"picks_ibfk_3\")\n  teams         teams?         @relation(fields: [winner], references: [teamid])\n\n  @@index([uid])\n  @@index([member_id], map: \"idx_18437_picks_ibfk_3\")\n  @@index([season], map: \"idx_18437_season\")\n  @@index([week, member_id], map: \"idx_week_member\")\n}\n\nmodel superbowl {\n  pickid                        Int            @id(map: \"idx_18448_primary\") @default(autoincrement())\n  uid                           Int\n  winner                        Int\n  loser                         Int\n  score                         Int\n  ts                            DateTime?      @default(now()) @db.Timestamptz(6)\n  season                        Int?\n  member_id                     Int?\n  teams_superbowl_loserToteams  teams          @relation(\"superbowl_loserToteams\", fields: [loser], references: [teamid], onDelete: NoAction, onUpdate: NoAction, map: \"fk_loser_team\")\n  leaguemembers                 leaguemembers? @relation(fields: [member_id], references: [membership_id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_member_id\")\n  teams_superbowl_winnerToteams teams          @relation(\"superbowl_winnerToteams\", fields: [winner], references: [teamid], onDelete: NoAction, onUpdate: NoAction, map: \"fk_winner_team\")\n\n  @@index([loser])\n  @@index([winner])\n  @@index([member_id], map: \"idx_18448_member_id\")\n  @@index([season], map: \"idx_18448_season\")\n  @@index([ts], map: \"idx_18448_ts\")\n}\n\nmodel superbowlsquares {\n  square_id       Int      @id(map: \"idx_18454_primary\") @default(autoincrement())\n  uid             Int\n  league_id       Int\n  afc_score_index Int\n  nfc_score_index Int\n  correct         Boolean\n  ts              DateTime @default(now()) @db.Timestamptz(6)\n\n  @@index([ts], map: \"idx_18454_ts\")\n}\n\nmodel teams {\n  teamid                            Int         @id(map: \"idx_18460_primary\") @default(autoincrement())\n  abbrev                            String?     @db.VarChar(50)\n  loc                               String      @db.VarChar(255)\n  name                              String      @db.VarChar(255)\n  conference                        String?     @db.VarChar(50)\n  primary_color                     String?     @db.VarChar(50)\n  secondary_color                   String?     @db.VarChar(50)\n  tertiary_color                    String?     @db.VarChar(50)\n  games_games_homeToteams           games[]     @relation(\"games_homeToteams\")\n  games_games_awayToteams           games[]     @relation(\"games_awayToteams\")\n  picks                             picks[]\n  superbowl_superbowl_loserToteams  superbowl[] @relation(\"superbowl_loserToteams\")\n  superbowl_superbowl_winnerToteams superbowl[] @relation(\"superbowl_winnerToteams\")\n\n  @@index([abbrev], map: \"idx_18460_abbrev\")\n  @@index([conference], map: \"idx_18460_conference\")\n  @@index([loc], map: \"idx_18460_loc\")\n}\n\nenum EmailType {\n  week_reminder\n  week_summary\n  week_picks\n  league_registration\n  league_broadcast\n}\n\nenum LatePolicy {\n  allow_late_whole_week\n  close_at_first_game_start\n  allow_late_and_lock_after_start\n}\n\nenum MemberRole {\n  player\n  admin\n}\n\nenum MessageStatus {\n  PUBLISHED\n  DELETED\n}\n\nenum MessageType {\n  WEEK_COMMENT\n  LEAGUE_MESSAGE\n}\n\nenum PickPolicy {\n  choose_winner\n}\n\nenum ReminderPolicy {\n  three_hours_before\n}\n\nenum LeagueStatus {\n  not_started\n  in_progress\n  completed\n}\n\nenum ScoringType {\n  game_winner\n}\n",
  "inlineSchemaHash": "cd5b754b6b8b81733847de4351b83ee2b78d3c4800fb686843708f5d9b98c524",
  "copyEngine": true,
  "runtimeDataModel": {
    "models": {},
    "enums": {},
    "types": {}
  },
  "dirname": ""
}

config.runtimeDataModel = JSON.parse("{\"models\":{\"EmailLogs\":{\"fields\":[{\"name\":\"email_log_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"league_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"member_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email_type\",\"kind\":\"enum\",\"type\":\"EmailType\"},{\"name\":\"ts\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"week\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"resend_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"leagues\",\"kind\":\"object\",\"type\":\"leagues\",\"relationName\":\"EmailLogsToleagues\"},{\"name\":\"leaguemembers\",\"kind\":\"object\",\"type\":\"leaguemembers\",\"relationName\":\"EmailLogsToleaguemembers\"}],\"dbName\":null},\"WeekWinners\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"league_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"membership_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"week\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"correct_count\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"score_diff\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"leagues\",\"kind\":\"object\",\"type\":\"leagues\",\"relationName\":\"WeekWinnersToleagues\"},{\"name\":\"leaguemembers\",\"kind\":\"object\",\"type\":\"leaguemembers\",\"relationName\":\"WeekWinnersToleaguemembers\"}],\"dbName\":null},\"games\":{\"fields\":[{\"name\":\"gid\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"season\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"week\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ts\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"home\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"away\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"homescore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"awayscore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"done\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"winner\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"international\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"seconds\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"current_record\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_tiebreaker\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"homerecord\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"awayrecord\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"current_quarter_seconds_remaining\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"current_quarter\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"msf_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"espn_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"teams_games_homeToteams\",\"kind\":\"object\",\"type\":\"teams\",\"relationName\":\"games_homeToteams\"},{\"name\":\"teams_games_awayToteams\",\"kind\":\"object\",\"type\":\"teams\",\"relationName\":\"games_awayToteams\"},{\"name\":\"picks\",\"kind\":\"object\",\"type\":\"picks\",\"relationName\":\"gamesTopicks\"}],\"dbName\":null},\"leaguemembers\":{\"fields\":[{\"name\":\"membership_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"league_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ts\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"MemberRole\"},{\"name\":\"paid\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"EmailLogs\",\"kind\":\"object\",\"type\":\"EmailLogs\",\"relationName\":\"EmailLogsToleaguemembers\"},{\"name\":\"WeekWinners\",\"kind\":\"object\",\"type\":\"WeekWinners\",\"relationName\":\"WeekWinnersToleaguemembers\"},{\"name\":\"people\",\"kind\":\"object\",\"type\":\"people\",\"relationName\":\"leaguemembersTopeople\"},{\"name\":\"leagues\",\"kind\":\"object\",\"type\":\"leagues\",\"relationName\":\"leaguemembersToleagues\"},{\"name\":\"leaguemessages\",\"kind\":\"object\",\"type\":\"leaguemessages\",\"relationName\":\"leaguemembersToleaguemessages\"},{\"name\":\"picks\",\"kind\":\"object\",\"type\":\"picks\",\"relationName\":\"leaguemembersTopicks\"},{\"name\":\"superbowl\",\"kind\":\"object\",\"type\":\"superbowl\",\"relationName\":\"leaguemembersTosuperbowl\"}],\"dbName\":null},\"leaguemessages\":{\"fields\":[{\"name\":\"message_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"member_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"league_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"week\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"message_type\",\"kind\":\"enum\",\"type\":\"MessageType\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"MessageStatus\"},{\"name\":\"leagues\",\"kind\":\"object\",\"type\":\"leagues\",\"relationName\":\"leaguemessagesToleagues\"},{\"name\":\"leaguemembers\",\"kind\":\"object\",\"type\":\"leaguemembers\",\"relationName\":\"leaguemembersToleaguemessages\"}],\"dbName\":null},\"leagues\":{\"fields\":[{\"name\":\"league_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_by_user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_time\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"season\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"late_policy\",\"kind\":\"enum\",\"type\":\"LatePolicy\"},{\"name\":\"pick_policy\",\"kind\":\"enum\",\"type\":\"PickPolicy\"},{\"name\":\"reminder_policy\",\"kind\":\"enum\",\"type\":\"ReminderPolicy\"},{\"name\":\"scoring_type\",\"kind\":\"enum\",\"type\":\"ScoringType\"},{\"name\":\"share_code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"superbowl_competition\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"prior_league_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"LeagueStatus\"},{\"name\":\"EmailLogs\",\"kind\":\"object\",\"type\":\"EmailLogs\",\"relationName\":\"EmailLogsToleagues\"},{\"name\":\"WeekWinners\",\"kind\":\"object\",\"type\":\"WeekWinners\",\"relationName\":\"WeekWinnersToleagues\"},{\"name\":\"leaguemembers\",\"kind\":\"object\",\"type\":\"leaguemembers\",\"relationName\":\"leaguemembersToleagues\"},{\"name\":\"leaguemessages\",\"kind\":\"object\",\"type\":\"leaguemessages\",\"relationName\":\"leaguemessagesToleagues\"},{\"name\":\"people\",\"kind\":\"object\",\"type\":\"people\",\"relationName\":\"leaguesTopeople\"},{\"name\":\"prior_league\",\"kind\":\"object\",\"type\":\"leagues\",\"relationName\":\"leaguesToleagues\"},{\"name\":\"future_leagues\",\"kind\":\"object\",\"type\":\"leagues\",\"relationName\":\"leaguesToleagues\"}],\"dbName\":null},\"people\":{\"fields\":[{\"name\":\"uid\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fname\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lname\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"season\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email2\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"google_photo_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"google_email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"google_userid\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"supabase_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"leaguemembers\",\"kind\":\"object\",\"type\":\"leaguemembers\",\"relationName\":\"leaguemembersTopeople\"},{\"name\":\"leagues\",\"kind\":\"object\",\"type\":\"leagues\",\"relationName\":\"leaguesTopeople\"},{\"name\":\"picks\",\"kind\":\"object\",\"type\":\"picks\",\"relationName\":\"peopleTopicks\"}],\"dbName\":null},\"picks\":{\"fields\":[{\"name\":\"pickid\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"uid\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"season\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"week\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"gid\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"winner\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"loser\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ts\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"correct\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"done\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"is_random\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"member_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"games\",\"kind\":\"object\",\"type\":\"games\",\"relationName\":\"gamesTopicks\"},{\"name\":\"people\",\"kind\":\"object\",\"type\":\"people\",\"relationName\":\"peopleTopicks\"},{\"name\":\"leaguemembers\",\"kind\":\"object\",\"type\":\"leaguemembers\",\"relationName\":\"leaguemembersTopicks\"},{\"name\":\"teams\",\"kind\":\"object\",\"type\":\"teams\",\"relationName\":\"picksToteams\"}],\"dbName\":null},\"superbowl\":{\"fields\":[{\"name\":\"pickid\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"uid\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"winner\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"loser\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ts\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"season\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"member_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"teams_superbowl_loserToteams\",\"kind\":\"object\",\"type\":\"teams\",\"relationName\":\"superbowl_loserToteams\"},{\"name\":\"leaguemembers\",\"kind\":\"object\",\"type\":\"leaguemembers\",\"relationName\":\"leaguemembersTosuperbowl\"},{\"name\":\"teams_superbowl_winnerToteams\",\"kind\":\"object\",\"type\":\"teams\",\"relationName\":\"superbowl_winnerToteams\"}],\"dbName\":null},\"superbowlsquares\":{\"fields\":[{\"name\":\"square_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"uid\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"league_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"afc_score_index\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nfc_score_index\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"correct\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"ts\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"teams\":{\"fields\":[{\"name\":\"teamid\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"abbrev\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"loc\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"conference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"primary_color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"secondary_color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tertiary_color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"games_games_homeToteams\",\"kind\":\"object\",\"type\":\"games\",\"relationName\":\"games_homeToteams\"},{\"name\":\"games_games_awayToteams\",\"kind\":\"object\",\"type\":\"games\",\"relationName\":\"games_awayToteams\"},{\"name\":\"picks\",\"kind\":\"object\",\"type\":\"picks\",\"relationName\":\"picksToteams\"},{\"name\":\"superbowl_superbowl_loserToteams\",\"kind\":\"object\",\"type\":\"superbowl\",\"relationName\":\"superbowl_loserToteams\"},{\"name\":\"superbowl_superbowl_winnerToteams\",\"kind\":\"object\",\"type\":\"superbowl\",\"relationName\":\"superbowl_winnerToteams\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
config.engineWasm = undefined
config.compilerWasm = {
  getRuntime: async () => await import("@prisma/client/runtime/query_compiler_bg.postgresql.mjs"),

  getQueryCompilerWasmModule: async () => {
    const { readFile } = await import('node:fs/promises')
    const { createRequire } = await import('node:module')
    const require = createRequire(import.meta.url)

    const wasmModulePath = require.resolve("@prisma/client/runtime/query_compiler_bg.postgresql.wasm")
    const wasmModuleBytes = await readFile(wasmModulePath)

    return new globalThis.WebAssembly.Module(wasmModuleBytes)
  }
}




export type LogOptions<ClientOptions extends Prisma.PrismaClientOptions> =
  'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never

export interface PrismaClientConstructor {
    /**
   * ## Prisma Client
   * 
   * Type-safe database client for TypeScript
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more EmailLogs
   * const emailLogs = await prisma.emailLogs.findMany()
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  new <
    ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
    U = LogOptions<ClientOptions>,
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
  >(options?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>): PrismaClient<ClientOptions, U, ExtArgs>
}

/**
 * ## Prisma Client
 * 
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more EmailLogs
 * const emailLogs = await prisma.emailLogs.findMany()
 * ```
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */

export interface PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = LogOptions<ClientOptions>,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): runtime.Types.Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): runtime.Types.Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): runtime.Types.Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => runtime.Types.Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): runtime.Types.Utils.JsPromise<R>


  $extends: runtime.Types.Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, runtime.Types.Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.emailLogs`: Exposes CRUD operations for the **EmailLogs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EmailLogs
    * const emailLogs = await prisma.emailLogs.findMany()
    * ```
    */
  get emailLogs(): Prisma.EmailLogsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.weekWinners`: Exposes CRUD operations for the **WeekWinners** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WeekWinners
    * const weekWinners = await prisma.weekWinners.findMany()
    * ```
    */
  get weekWinners(): Prisma.WeekWinnersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.games`: Exposes CRUD operations for the **games** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Games
    * const games = await prisma.games.findMany()
    * ```
    */
  get games(): Prisma.gamesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.leaguemembers`: Exposes CRUD operations for the **leaguemembers** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Leaguemembers
    * const leaguemembers = await prisma.leaguemembers.findMany()
    * ```
    */
  get leaguemembers(): Prisma.leaguemembersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.leaguemessages`: Exposes CRUD operations for the **leaguemessages** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Leaguemessages
    * const leaguemessages = await prisma.leaguemessages.findMany()
    * ```
    */
  get leaguemessages(): Prisma.leaguemessagesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.leagues`: Exposes CRUD operations for the **leagues** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Leagues
    * const leagues = await prisma.leagues.findMany()
    * ```
    */
  get leagues(): Prisma.leaguesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.people`: Exposes CRUD operations for the **people** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more People
    * const people = await prisma.people.findMany()
    * ```
    */
  get people(): Prisma.peopleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.picks`: Exposes CRUD operations for the **picks** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Picks
    * const picks = await prisma.picks.findMany()
    * ```
    */
  get picks(): Prisma.picksDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.superbowl`: Exposes CRUD operations for the **superbowl** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Superbowls
    * const superbowls = await prisma.superbowl.findMany()
    * ```
    */
  get superbowl(): Prisma.superbowlDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.superbowlsquares`: Exposes CRUD operations for the **superbowlsquares** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Superbowlsquares
    * const superbowlsquares = await prisma.superbowlsquares.findMany()
    * ```
    */
  get superbowlsquares(): Prisma.superbowlsquaresDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.teams`: Exposes CRUD operations for the **teams** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Teams
    * const teams = await prisma.teams.findMany()
    * ```
    */
  get teams(): Prisma.teamsDelegate<ExtArgs, ClientOptions>;
}

export function getPrismaClientClass(dirname: string): PrismaClientConstructor {
  config.dirname = dirname
  return runtime.getPrismaClient(config) as unknown as PrismaClientConstructor
}
