
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `leagues` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model leagues
 * 
 */
export type leaguesModel = runtime.Types.Result.DefaultSelection<Prisma.$leaguesPayload>

export type AggregateLeagues = {
  _count: LeaguesCountAggregateOutputType | null
  _avg: LeaguesAvgAggregateOutputType | null
  _sum: LeaguesSumAggregateOutputType | null
  _min: LeaguesMinAggregateOutputType | null
  _max: LeaguesMaxAggregateOutputType | null
}

export type LeaguesAvgAggregateOutputType = {
  league_id: number | null
  created_by_user_id: number | null
  season: number | null
  prior_league_id: number | null
}

export type LeaguesSumAggregateOutputType = {
  league_id: number | null
  created_by_user_id: number | null
  season: number | null
  prior_league_id: number | null
}

export type LeaguesMinAggregateOutputType = {
  league_id: number | null
  created_by_user_id: number | null
  name: string | null
  created_time: Date | null
  season: number | null
  late_policy: $Enums.LatePolicy | null
  pick_policy: $Enums.PickPolicy | null
  reminder_policy: $Enums.ReminderPolicy | null
  scoring_type: $Enums.ScoringType | null
  share_code: string | null
  superbowl_competition: boolean | null
  prior_league_id: number | null
  status: $Enums.LeagueStatus | null
}

export type LeaguesMaxAggregateOutputType = {
  league_id: number | null
  created_by_user_id: number | null
  name: string | null
  created_time: Date | null
  season: number | null
  late_policy: $Enums.LatePolicy | null
  pick_policy: $Enums.PickPolicy | null
  reminder_policy: $Enums.ReminderPolicy | null
  scoring_type: $Enums.ScoringType | null
  share_code: string | null
  superbowl_competition: boolean | null
  prior_league_id: number | null
  status: $Enums.LeagueStatus | null
}

export type LeaguesCountAggregateOutputType = {
  league_id: number
  created_by_user_id: number
  name: number
  created_time: number
  season: number
  late_policy: number
  pick_policy: number
  reminder_policy: number
  scoring_type: number
  share_code: number
  superbowl_competition: number
  prior_league_id: number
  status: number
  _all: number
}


export type LeaguesAvgAggregateInputType = {
  league_id?: true
  created_by_user_id?: true
  season?: true
  prior_league_id?: true
}

export type LeaguesSumAggregateInputType = {
  league_id?: true
  created_by_user_id?: true
  season?: true
  prior_league_id?: true
}

export type LeaguesMinAggregateInputType = {
  league_id?: true
  created_by_user_id?: true
  name?: true
  created_time?: true
  season?: true
  late_policy?: true
  pick_policy?: true
  reminder_policy?: true
  scoring_type?: true
  share_code?: true
  superbowl_competition?: true
  prior_league_id?: true
  status?: true
}

export type LeaguesMaxAggregateInputType = {
  league_id?: true
  created_by_user_id?: true
  name?: true
  created_time?: true
  season?: true
  late_policy?: true
  pick_policy?: true
  reminder_policy?: true
  scoring_type?: true
  share_code?: true
  superbowl_competition?: true
  prior_league_id?: true
  status?: true
}

export type LeaguesCountAggregateInputType = {
  league_id?: true
  created_by_user_id?: true
  name?: true
  created_time?: true
  season?: true
  late_policy?: true
  pick_policy?: true
  reminder_policy?: true
  scoring_type?: true
  share_code?: true
  superbowl_competition?: true
  prior_league_id?: true
  status?: true
  _all?: true
}

export type LeaguesAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which leagues to aggregate.
   */
  where?: Prisma.leaguesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of leagues to fetch.
   */
  orderBy?: Prisma.leaguesOrderByWithRelationInput | Prisma.leaguesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.leaguesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` leagues from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` leagues.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned leagues
  **/
  _count?: true | LeaguesCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: LeaguesAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: LeaguesSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: LeaguesMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: LeaguesMaxAggregateInputType
}

export type GetLeaguesAggregateType<T extends LeaguesAggregateArgs> = {
      [P in keyof T & keyof AggregateLeagues]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateLeagues[P]>
    : Prisma.GetScalarType<T[P], AggregateLeagues[P]>
}




export type leaguesGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.leaguesWhereInput
  orderBy?: Prisma.leaguesOrderByWithAggregationInput | Prisma.leaguesOrderByWithAggregationInput[]
  by: Prisma.LeaguesScalarFieldEnum[] | Prisma.LeaguesScalarFieldEnum
  having?: Prisma.leaguesScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: LeaguesCountAggregateInputType | true
  _avg?: LeaguesAvgAggregateInputType
  _sum?: LeaguesSumAggregateInputType
  _min?: LeaguesMinAggregateInputType
  _max?: LeaguesMaxAggregateInputType
}

export type LeaguesGroupByOutputType = {
  league_id: number
  created_by_user_id: number
  name: string
  created_time: Date
  season: number
  late_policy: $Enums.LatePolicy | null
  pick_policy: $Enums.PickPolicy | null
  reminder_policy: $Enums.ReminderPolicy | null
  scoring_type: $Enums.ScoringType | null
  share_code: string | null
  superbowl_competition: boolean | null
  prior_league_id: number | null
  status: $Enums.LeagueStatus
  _count: LeaguesCountAggregateOutputType | null
  _avg: LeaguesAvgAggregateOutputType | null
  _sum: LeaguesSumAggregateOutputType | null
  _min: LeaguesMinAggregateOutputType | null
  _max: LeaguesMaxAggregateOutputType | null
}

type GetLeaguesGroupByPayload<T extends leaguesGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<LeaguesGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof LeaguesGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], LeaguesGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], LeaguesGroupByOutputType[P]>
      }
    >
  > 



export type leaguesWhereInput = {
  AND?: Prisma.leaguesWhereInput | Prisma.leaguesWhereInput[]
  OR?: Prisma.leaguesWhereInput[]
  NOT?: Prisma.leaguesWhereInput | Prisma.leaguesWhereInput[]
  league_id?: Prisma.IntFilter<"leagues"> | number
  created_by_user_id?: Prisma.IntFilter<"leagues"> | number
  name?: Prisma.StringFilter<"leagues"> | string
  created_time?: Prisma.DateTimeFilter<"leagues"> | Date | string
  season?: Prisma.IntFilter<"leagues"> | number
  late_policy?: Prisma.EnumLatePolicyNullableFilter<"leagues"> | $Enums.LatePolicy | null
  pick_policy?: Prisma.EnumPickPolicyNullableFilter<"leagues"> | $Enums.PickPolicy | null
  reminder_policy?: Prisma.EnumReminderPolicyNullableFilter<"leagues"> | $Enums.ReminderPolicy | null
  scoring_type?: Prisma.EnumScoringTypeNullableFilter<"leagues"> | $Enums.ScoringType | null
  share_code?: Prisma.StringNullableFilter<"leagues"> | string | null
  superbowl_competition?: Prisma.BoolNullableFilter<"leagues"> | boolean | null
  prior_league_id?: Prisma.IntNullableFilter<"leagues"> | number | null
  status?: Prisma.EnumLeagueStatusFilter<"leagues"> | $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsListRelationFilter
  WeekWinners?: Prisma.WeekWinnersListRelationFilter
  leaguemembers?: Prisma.LeaguemembersListRelationFilter
  leaguemessages?: Prisma.LeaguemessagesListRelationFilter
  people?: Prisma.XOR<Prisma.PeopleScalarRelationFilter, Prisma.peopleWhereInput>
  prior_league?: Prisma.XOR<Prisma.LeaguesNullableScalarRelationFilter, Prisma.leaguesWhereInput> | null
  future_leagues?: Prisma.LeaguesListRelationFilter
}

export type leaguesOrderByWithRelationInput = {
  league_id?: Prisma.SortOrder
  created_by_user_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  created_time?: Prisma.SortOrder
  season?: Prisma.SortOrder
  late_policy?: Prisma.SortOrderInput | Prisma.SortOrder
  pick_policy?: Prisma.SortOrderInput | Prisma.SortOrder
  reminder_policy?: Prisma.SortOrderInput | Prisma.SortOrder
  scoring_type?: Prisma.SortOrderInput | Prisma.SortOrder
  share_code?: Prisma.SortOrderInput | Prisma.SortOrder
  superbowl_competition?: Prisma.SortOrderInput | Prisma.SortOrder
  prior_league_id?: Prisma.SortOrderInput | Prisma.SortOrder
  status?: Prisma.SortOrder
  EmailLogs?: Prisma.EmailLogsOrderByRelationAggregateInput
  WeekWinners?: Prisma.WeekWinnersOrderByRelationAggregateInput
  leaguemembers?: Prisma.leaguemembersOrderByRelationAggregateInput
  leaguemessages?: Prisma.leaguemessagesOrderByRelationAggregateInput
  people?: Prisma.peopleOrderByWithRelationInput
  prior_league?: Prisma.leaguesOrderByWithRelationInput
  future_leagues?: Prisma.leaguesOrderByRelationAggregateInput
}

export type leaguesWhereUniqueInput = Prisma.AtLeast<{
  league_id?: number
  share_code?: string
  AND?: Prisma.leaguesWhereInput | Prisma.leaguesWhereInput[]
  OR?: Prisma.leaguesWhereInput[]
  NOT?: Prisma.leaguesWhereInput | Prisma.leaguesWhereInput[]
  created_by_user_id?: Prisma.IntFilter<"leagues"> | number
  name?: Prisma.StringFilter<"leagues"> | string
  created_time?: Prisma.DateTimeFilter<"leagues"> | Date | string
  season?: Prisma.IntFilter<"leagues"> | number
  late_policy?: Prisma.EnumLatePolicyNullableFilter<"leagues"> | $Enums.LatePolicy | null
  pick_policy?: Prisma.EnumPickPolicyNullableFilter<"leagues"> | $Enums.PickPolicy | null
  reminder_policy?: Prisma.EnumReminderPolicyNullableFilter<"leagues"> | $Enums.ReminderPolicy | null
  scoring_type?: Prisma.EnumScoringTypeNullableFilter<"leagues"> | $Enums.ScoringType | null
  superbowl_competition?: Prisma.BoolNullableFilter<"leagues"> | boolean | null
  prior_league_id?: Prisma.IntNullableFilter<"leagues"> | number | null
  status?: Prisma.EnumLeagueStatusFilter<"leagues"> | $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsListRelationFilter
  WeekWinners?: Prisma.WeekWinnersListRelationFilter
  leaguemembers?: Prisma.LeaguemembersListRelationFilter
  leaguemessages?: Prisma.LeaguemessagesListRelationFilter
  people?: Prisma.XOR<Prisma.PeopleScalarRelationFilter, Prisma.peopleWhereInput>
  prior_league?: Prisma.XOR<Prisma.LeaguesNullableScalarRelationFilter, Prisma.leaguesWhereInput> | null
  future_leagues?: Prisma.LeaguesListRelationFilter
}, "league_id" | "share_code">

export type leaguesOrderByWithAggregationInput = {
  league_id?: Prisma.SortOrder
  created_by_user_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  created_time?: Prisma.SortOrder
  season?: Prisma.SortOrder
  late_policy?: Prisma.SortOrderInput | Prisma.SortOrder
  pick_policy?: Prisma.SortOrderInput | Prisma.SortOrder
  reminder_policy?: Prisma.SortOrderInput | Prisma.SortOrder
  scoring_type?: Prisma.SortOrderInput | Prisma.SortOrder
  share_code?: Prisma.SortOrderInput | Prisma.SortOrder
  superbowl_competition?: Prisma.SortOrderInput | Prisma.SortOrder
  prior_league_id?: Prisma.SortOrderInput | Prisma.SortOrder
  status?: Prisma.SortOrder
  _count?: Prisma.leaguesCountOrderByAggregateInput
  _avg?: Prisma.leaguesAvgOrderByAggregateInput
  _max?: Prisma.leaguesMaxOrderByAggregateInput
  _min?: Prisma.leaguesMinOrderByAggregateInput
  _sum?: Prisma.leaguesSumOrderByAggregateInput
}

export type leaguesScalarWhereWithAggregatesInput = {
  AND?: Prisma.leaguesScalarWhereWithAggregatesInput | Prisma.leaguesScalarWhereWithAggregatesInput[]
  OR?: Prisma.leaguesScalarWhereWithAggregatesInput[]
  NOT?: Prisma.leaguesScalarWhereWithAggregatesInput | Prisma.leaguesScalarWhereWithAggregatesInput[]
  league_id?: Prisma.IntWithAggregatesFilter<"leagues"> | number
  created_by_user_id?: Prisma.IntWithAggregatesFilter<"leagues"> | number
  name?: Prisma.StringWithAggregatesFilter<"leagues"> | string
  created_time?: Prisma.DateTimeWithAggregatesFilter<"leagues"> | Date | string
  season?: Prisma.IntWithAggregatesFilter<"leagues"> | number
  late_policy?: Prisma.EnumLatePolicyNullableWithAggregatesFilter<"leagues"> | $Enums.LatePolicy | null
  pick_policy?: Prisma.EnumPickPolicyNullableWithAggregatesFilter<"leagues"> | $Enums.PickPolicy | null
  reminder_policy?: Prisma.EnumReminderPolicyNullableWithAggregatesFilter<"leagues"> | $Enums.ReminderPolicy | null
  scoring_type?: Prisma.EnumScoringTypeNullableWithAggregatesFilter<"leagues"> | $Enums.ScoringType | null
  share_code?: Prisma.StringNullableWithAggregatesFilter<"leagues"> | string | null
  superbowl_competition?: Prisma.BoolNullableWithAggregatesFilter<"leagues"> | boolean | null
  prior_league_id?: Prisma.IntNullableWithAggregatesFilter<"leagues"> | number | null
  status?: Prisma.EnumLeagueStatusWithAggregatesFilter<"leagues"> | $Enums.LeagueStatus
}

export type leaguesCreateInput = {
  name: string
  created_time?: Date | string
  season: number
  late_policy?: $Enums.LatePolicy | null
  pick_policy?: $Enums.PickPolicy | null
  reminder_policy?: $Enums.ReminderPolicy | null
  scoring_type?: $Enums.ScoringType | null
  share_code?: string | null
  superbowl_competition?: boolean | null
  status?: $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsCreateNestedManyWithoutLeaguesInput
  WeekWinners?: Prisma.WeekWinnersCreateNestedManyWithoutLeaguesInput
  leaguemembers?: Prisma.leaguemembersCreateNestedManyWithoutLeaguesInput
  leaguemessages?: Prisma.leaguemessagesCreateNestedManyWithoutLeaguesInput
  people: Prisma.peopleCreateNestedOneWithoutLeaguesInput
  prior_league?: Prisma.leaguesCreateNestedOneWithoutFuture_leaguesInput
  future_leagues?: Prisma.leaguesCreateNestedManyWithoutPrior_leagueInput
}

export type leaguesUncheckedCreateInput = {
  league_id?: number
  created_by_user_id: number
  name: string
  created_time?: Date | string
  season: number
  late_policy?: $Enums.LatePolicy | null
  pick_policy?: $Enums.PickPolicy | null
  reminder_policy?: $Enums.ReminderPolicy | null
  scoring_type?: $Enums.ScoringType | null
  share_code?: string | null
  superbowl_competition?: boolean | null
  prior_league_id?: number | null
  status?: $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsUncheckedCreateNestedManyWithoutLeaguesInput
  WeekWinners?: Prisma.WeekWinnersUncheckedCreateNestedManyWithoutLeaguesInput
  leaguemembers?: Prisma.leaguemembersUncheckedCreateNestedManyWithoutLeaguesInput
  leaguemessages?: Prisma.leaguemessagesUncheckedCreateNestedManyWithoutLeaguesInput
  future_leagues?: Prisma.leaguesUncheckedCreateNestedManyWithoutPrior_leagueInput
}

export type leaguesUpdateInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  created_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  season?: Prisma.IntFieldUpdateOperationsInput | number
  late_policy?: Prisma.NullableEnumLatePolicyFieldUpdateOperationsInput | $Enums.LatePolicy | null
  pick_policy?: Prisma.NullableEnumPickPolicyFieldUpdateOperationsInput | $Enums.PickPolicy | null
  reminder_policy?: Prisma.NullableEnumReminderPolicyFieldUpdateOperationsInput | $Enums.ReminderPolicy | null
  scoring_type?: Prisma.NullableEnumScoringTypeFieldUpdateOperationsInput | $Enums.ScoringType | null
  share_code?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  superbowl_competition?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  status?: Prisma.EnumLeagueStatusFieldUpdateOperationsInput | $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsUpdateManyWithoutLeaguesNestedInput
  WeekWinners?: Prisma.WeekWinnersUpdateManyWithoutLeaguesNestedInput
  leaguemembers?: Prisma.leaguemembersUpdateManyWithoutLeaguesNestedInput
  leaguemessages?: Prisma.leaguemessagesUpdateManyWithoutLeaguesNestedInput
  people?: Prisma.peopleUpdateOneRequiredWithoutLeaguesNestedInput
  prior_league?: Prisma.leaguesUpdateOneWithoutFuture_leaguesNestedInput
  future_leagues?: Prisma.leaguesUpdateManyWithoutPrior_leagueNestedInput
}

export type leaguesUncheckedUpdateInput = {
  league_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_user_id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  created_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  season?: Prisma.IntFieldUpdateOperationsInput | number
  late_policy?: Prisma.NullableEnumLatePolicyFieldUpdateOperationsInput | $Enums.LatePolicy | null
  pick_policy?: Prisma.NullableEnumPickPolicyFieldUpdateOperationsInput | $Enums.PickPolicy | null
  reminder_policy?: Prisma.NullableEnumReminderPolicyFieldUpdateOperationsInput | $Enums.ReminderPolicy | null
  scoring_type?: Prisma.NullableEnumScoringTypeFieldUpdateOperationsInput | $Enums.ScoringType | null
  share_code?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  superbowl_competition?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  prior_league_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumLeagueStatusFieldUpdateOperationsInput | $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsUncheckedUpdateManyWithoutLeaguesNestedInput
  WeekWinners?: Prisma.WeekWinnersUncheckedUpdateManyWithoutLeaguesNestedInput
  leaguemembers?: Prisma.leaguemembersUncheckedUpdateManyWithoutLeaguesNestedInput
  leaguemessages?: Prisma.leaguemessagesUncheckedUpdateManyWithoutLeaguesNestedInput
  future_leagues?: Prisma.leaguesUncheckedUpdateManyWithoutPrior_leagueNestedInput
}

export type leaguesCreateManyInput = {
  league_id?: number
  created_by_user_id: number
  name: string
  created_time?: Date | string
  season: number
  late_policy?: $Enums.LatePolicy | null
  pick_policy?: $Enums.PickPolicy | null
  reminder_policy?: $Enums.ReminderPolicy | null
  scoring_type?: $Enums.ScoringType | null
  share_code?: string | null
  superbowl_competition?: boolean | null
  prior_league_id?: number | null
  status?: $Enums.LeagueStatus
}

export type leaguesUpdateManyMutationInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  created_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  season?: Prisma.IntFieldUpdateOperationsInput | number
  late_policy?: Prisma.NullableEnumLatePolicyFieldUpdateOperationsInput | $Enums.LatePolicy | null
  pick_policy?: Prisma.NullableEnumPickPolicyFieldUpdateOperationsInput | $Enums.PickPolicy | null
  reminder_policy?: Prisma.NullableEnumReminderPolicyFieldUpdateOperationsInput | $Enums.ReminderPolicy | null
  scoring_type?: Prisma.NullableEnumScoringTypeFieldUpdateOperationsInput | $Enums.ScoringType | null
  share_code?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  superbowl_competition?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  status?: Prisma.EnumLeagueStatusFieldUpdateOperationsInput | $Enums.LeagueStatus
}

export type leaguesUncheckedUpdateManyInput = {
  league_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_user_id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  created_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  season?: Prisma.IntFieldUpdateOperationsInput | number
  late_policy?: Prisma.NullableEnumLatePolicyFieldUpdateOperationsInput | $Enums.LatePolicy | null
  pick_policy?: Prisma.NullableEnumPickPolicyFieldUpdateOperationsInput | $Enums.PickPolicy | null
  reminder_policy?: Prisma.NullableEnumReminderPolicyFieldUpdateOperationsInput | $Enums.ReminderPolicy | null
  scoring_type?: Prisma.NullableEnumScoringTypeFieldUpdateOperationsInput | $Enums.ScoringType | null
  share_code?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  superbowl_competition?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  prior_league_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumLeagueStatusFieldUpdateOperationsInput | $Enums.LeagueStatus
}

export type LeaguesScalarRelationFilter = {
  is?: Prisma.leaguesWhereInput
  isNot?: Prisma.leaguesWhereInput
}

export type LeaguesNullableScalarRelationFilter = {
  is?: Prisma.leaguesWhereInput | null
  isNot?: Prisma.leaguesWhereInput | null
}

export type LeaguesListRelationFilter = {
  every?: Prisma.leaguesWhereInput
  some?: Prisma.leaguesWhereInput
  none?: Prisma.leaguesWhereInput
}

export type leaguesOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type leaguesCountOrderByAggregateInput = {
  league_id?: Prisma.SortOrder
  created_by_user_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  created_time?: Prisma.SortOrder
  season?: Prisma.SortOrder
  late_policy?: Prisma.SortOrder
  pick_policy?: Prisma.SortOrder
  reminder_policy?: Prisma.SortOrder
  scoring_type?: Prisma.SortOrder
  share_code?: Prisma.SortOrder
  superbowl_competition?: Prisma.SortOrder
  prior_league_id?: Prisma.SortOrder
  status?: Prisma.SortOrder
}

export type leaguesAvgOrderByAggregateInput = {
  league_id?: Prisma.SortOrder
  created_by_user_id?: Prisma.SortOrder
  season?: Prisma.SortOrder
  prior_league_id?: Prisma.SortOrder
}

export type leaguesMaxOrderByAggregateInput = {
  league_id?: Prisma.SortOrder
  created_by_user_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  created_time?: Prisma.SortOrder
  season?: Prisma.SortOrder
  late_policy?: Prisma.SortOrder
  pick_policy?: Prisma.SortOrder
  reminder_policy?: Prisma.SortOrder
  scoring_type?: Prisma.SortOrder
  share_code?: Prisma.SortOrder
  superbowl_competition?: Prisma.SortOrder
  prior_league_id?: Prisma.SortOrder
  status?: Prisma.SortOrder
}

export type leaguesMinOrderByAggregateInput = {
  league_id?: Prisma.SortOrder
  created_by_user_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  created_time?: Prisma.SortOrder
  season?: Prisma.SortOrder
  late_policy?: Prisma.SortOrder
  pick_policy?: Prisma.SortOrder
  reminder_policy?: Prisma.SortOrder
  scoring_type?: Prisma.SortOrder
  share_code?: Prisma.SortOrder
  superbowl_competition?: Prisma.SortOrder
  prior_league_id?: Prisma.SortOrder
  status?: Prisma.SortOrder
}

export type leaguesSumOrderByAggregateInput = {
  league_id?: Prisma.SortOrder
  created_by_user_id?: Prisma.SortOrder
  season?: Prisma.SortOrder
  prior_league_id?: Prisma.SortOrder
}

export type leaguesCreateNestedOneWithoutEmailLogsInput = {
  create?: Prisma.XOR<Prisma.leaguesCreateWithoutEmailLogsInput, Prisma.leaguesUncheckedCreateWithoutEmailLogsInput>
  connectOrCreate?: Prisma.leaguesCreateOrConnectWithoutEmailLogsInput
  connect?: Prisma.leaguesWhereUniqueInput
}

export type leaguesUpdateOneRequiredWithoutEmailLogsNestedInput = {
  create?: Prisma.XOR<Prisma.leaguesCreateWithoutEmailLogsInput, Prisma.leaguesUncheckedCreateWithoutEmailLogsInput>
  connectOrCreate?: Prisma.leaguesCreateOrConnectWithoutEmailLogsInput
  upsert?: Prisma.leaguesUpsertWithoutEmailLogsInput
  connect?: Prisma.leaguesWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.leaguesUpdateToOneWithWhereWithoutEmailLogsInput, Prisma.leaguesUpdateWithoutEmailLogsInput>, Prisma.leaguesUncheckedUpdateWithoutEmailLogsInput>
}

export type leaguesCreateNestedOneWithoutWeekWinnersInput = {
  create?: Prisma.XOR<Prisma.leaguesCreateWithoutWeekWinnersInput, Prisma.leaguesUncheckedCreateWithoutWeekWinnersInput>
  connectOrCreate?: Prisma.leaguesCreateOrConnectWithoutWeekWinnersInput
  connect?: Prisma.leaguesWhereUniqueInput
}

export type leaguesUpdateOneRequiredWithoutWeekWinnersNestedInput = {
  create?: Prisma.XOR<Prisma.leaguesCreateWithoutWeekWinnersInput, Prisma.leaguesUncheckedCreateWithoutWeekWinnersInput>
  connectOrCreate?: Prisma.leaguesCreateOrConnectWithoutWeekWinnersInput
  upsert?: Prisma.leaguesUpsertWithoutWeekWinnersInput
  connect?: Prisma.leaguesWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.leaguesUpdateToOneWithWhereWithoutWeekWinnersInput, Prisma.leaguesUpdateWithoutWeekWinnersInput>, Prisma.leaguesUncheckedUpdateWithoutWeekWinnersInput>
}

export type leaguesCreateNestedOneWithoutLeaguemembersInput = {
  create?: Prisma.XOR<Prisma.leaguesCreateWithoutLeaguemembersInput, Prisma.leaguesUncheckedCreateWithoutLeaguemembersInput>
  connectOrCreate?: Prisma.leaguesCreateOrConnectWithoutLeaguemembersInput
  connect?: Prisma.leaguesWhereUniqueInput
}

export type leaguesUpdateOneRequiredWithoutLeaguemembersNestedInput = {
  create?: Prisma.XOR<Prisma.leaguesCreateWithoutLeaguemembersInput, Prisma.leaguesUncheckedCreateWithoutLeaguemembersInput>
  connectOrCreate?: Prisma.leaguesCreateOrConnectWithoutLeaguemembersInput
  upsert?: Prisma.leaguesUpsertWithoutLeaguemembersInput
  connect?: Prisma.leaguesWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.leaguesUpdateToOneWithWhereWithoutLeaguemembersInput, Prisma.leaguesUpdateWithoutLeaguemembersInput>, Prisma.leaguesUncheckedUpdateWithoutLeaguemembersInput>
}

export type leaguesCreateNestedOneWithoutLeaguemessagesInput = {
  create?: Prisma.XOR<Prisma.leaguesCreateWithoutLeaguemessagesInput, Prisma.leaguesUncheckedCreateWithoutLeaguemessagesInput>
  connectOrCreate?: Prisma.leaguesCreateOrConnectWithoutLeaguemessagesInput
  connect?: Prisma.leaguesWhereUniqueInput
}

export type leaguesUpdateOneRequiredWithoutLeaguemessagesNestedInput = {
  create?: Prisma.XOR<Prisma.leaguesCreateWithoutLeaguemessagesInput, Prisma.leaguesUncheckedCreateWithoutLeaguemessagesInput>
  connectOrCreate?: Prisma.leaguesCreateOrConnectWithoutLeaguemessagesInput
  upsert?: Prisma.leaguesUpsertWithoutLeaguemessagesInput
  connect?: Prisma.leaguesWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.leaguesUpdateToOneWithWhereWithoutLeaguemessagesInput, Prisma.leaguesUpdateWithoutLeaguemessagesInput>, Prisma.leaguesUncheckedUpdateWithoutLeaguemessagesInput>
}

export type leaguesCreateNestedOneWithoutFuture_leaguesInput = {
  create?: Prisma.XOR<Prisma.leaguesCreateWithoutFuture_leaguesInput, Prisma.leaguesUncheckedCreateWithoutFuture_leaguesInput>
  connectOrCreate?: Prisma.leaguesCreateOrConnectWithoutFuture_leaguesInput
  connect?: Prisma.leaguesWhereUniqueInput
}

export type leaguesCreateNestedManyWithoutPrior_leagueInput = {
  create?: Prisma.XOR<Prisma.leaguesCreateWithoutPrior_leagueInput, Prisma.leaguesUncheckedCreateWithoutPrior_leagueInput> | Prisma.leaguesCreateWithoutPrior_leagueInput[] | Prisma.leaguesUncheckedCreateWithoutPrior_leagueInput[]
  connectOrCreate?: Prisma.leaguesCreateOrConnectWithoutPrior_leagueInput | Prisma.leaguesCreateOrConnectWithoutPrior_leagueInput[]
  createMany?: Prisma.leaguesCreateManyPrior_leagueInputEnvelope
  connect?: Prisma.leaguesWhereUniqueInput | Prisma.leaguesWhereUniqueInput[]
}

export type leaguesUncheckedCreateNestedManyWithoutPrior_leagueInput = {
  create?: Prisma.XOR<Prisma.leaguesCreateWithoutPrior_leagueInput, Prisma.leaguesUncheckedCreateWithoutPrior_leagueInput> | Prisma.leaguesCreateWithoutPrior_leagueInput[] | Prisma.leaguesUncheckedCreateWithoutPrior_leagueInput[]
  connectOrCreate?: Prisma.leaguesCreateOrConnectWithoutPrior_leagueInput | Prisma.leaguesCreateOrConnectWithoutPrior_leagueInput[]
  createMany?: Prisma.leaguesCreateManyPrior_leagueInputEnvelope
  connect?: Prisma.leaguesWhereUniqueInput | Prisma.leaguesWhereUniqueInput[]
}

export type NullableEnumLatePolicyFieldUpdateOperationsInput = {
  set?: $Enums.LatePolicy | null
}

export type NullableEnumPickPolicyFieldUpdateOperationsInput = {
  set?: $Enums.PickPolicy | null
}

export type NullableEnumReminderPolicyFieldUpdateOperationsInput = {
  set?: $Enums.ReminderPolicy | null
}

export type NullableEnumScoringTypeFieldUpdateOperationsInput = {
  set?: $Enums.ScoringType | null
}

export type EnumLeagueStatusFieldUpdateOperationsInput = {
  set?: $Enums.LeagueStatus
}

export type leaguesUpdateOneWithoutFuture_leaguesNestedInput = {
  create?: Prisma.XOR<Prisma.leaguesCreateWithoutFuture_leaguesInput, Prisma.leaguesUncheckedCreateWithoutFuture_leaguesInput>
  connectOrCreate?: Prisma.leaguesCreateOrConnectWithoutFuture_leaguesInput
  upsert?: Prisma.leaguesUpsertWithoutFuture_leaguesInput
  disconnect?: Prisma.leaguesWhereInput | boolean
  delete?: Prisma.leaguesWhereInput | boolean
  connect?: Prisma.leaguesWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.leaguesUpdateToOneWithWhereWithoutFuture_leaguesInput, Prisma.leaguesUpdateWithoutFuture_leaguesInput>, Prisma.leaguesUncheckedUpdateWithoutFuture_leaguesInput>
}

export type leaguesUpdateManyWithoutPrior_leagueNestedInput = {
  create?: Prisma.XOR<Prisma.leaguesCreateWithoutPrior_leagueInput, Prisma.leaguesUncheckedCreateWithoutPrior_leagueInput> | Prisma.leaguesCreateWithoutPrior_leagueInput[] | Prisma.leaguesUncheckedCreateWithoutPrior_leagueInput[]
  connectOrCreate?: Prisma.leaguesCreateOrConnectWithoutPrior_leagueInput | Prisma.leaguesCreateOrConnectWithoutPrior_leagueInput[]
  upsert?: Prisma.leaguesUpsertWithWhereUniqueWithoutPrior_leagueInput | Prisma.leaguesUpsertWithWhereUniqueWithoutPrior_leagueInput[]
  createMany?: Prisma.leaguesCreateManyPrior_leagueInputEnvelope
  set?: Prisma.leaguesWhereUniqueInput | Prisma.leaguesWhereUniqueInput[]
  disconnect?: Prisma.leaguesWhereUniqueInput | Prisma.leaguesWhereUniqueInput[]
  delete?: Prisma.leaguesWhereUniqueInput | Prisma.leaguesWhereUniqueInput[]
  connect?: Prisma.leaguesWhereUniqueInput | Prisma.leaguesWhereUniqueInput[]
  update?: Prisma.leaguesUpdateWithWhereUniqueWithoutPrior_leagueInput | Prisma.leaguesUpdateWithWhereUniqueWithoutPrior_leagueInput[]
  updateMany?: Prisma.leaguesUpdateManyWithWhereWithoutPrior_leagueInput | Prisma.leaguesUpdateManyWithWhereWithoutPrior_leagueInput[]
  deleteMany?: Prisma.leaguesScalarWhereInput | Prisma.leaguesScalarWhereInput[]
}

export type leaguesUncheckedUpdateManyWithoutPrior_leagueNestedInput = {
  create?: Prisma.XOR<Prisma.leaguesCreateWithoutPrior_leagueInput, Prisma.leaguesUncheckedCreateWithoutPrior_leagueInput> | Prisma.leaguesCreateWithoutPrior_leagueInput[] | Prisma.leaguesUncheckedCreateWithoutPrior_leagueInput[]
  connectOrCreate?: Prisma.leaguesCreateOrConnectWithoutPrior_leagueInput | Prisma.leaguesCreateOrConnectWithoutPrior_leagueInput[]
  upsert?: Prisma.leaguesUpsertWithWhereUniqueWithoutPrior_leagueInput | Prisma.leaguesUpsertWithWhereUniqueWithoutPrior_leagueInput[]
  createMany?: Prisma.leaguesCreateManyPrior_leagueInputEnvelope
  set?: Prisma.leaguesWhereUniqueInput | Prisma.leaguesWhereUniqueInput[]
  disconnect?: Prisma.leaguesWhereUniqueInput | Prisma.leaguesWhereUniqueInput[]
  delete?: Prisma.leaguesWhereUniqueInput | Prisma.leaguesWhereUniqueInput[]
  connect?: Prisma.leaguesWhereUniqueInput | Prisma.leaguesWhereUniqueInput[]
  update?: Prisma.leaguesUpdateWithWhereUniqueWithoutPrior_leagueInput | Prisma.leaguesUpdateWithWhereUniqueWithoutPrior_leagueInput[]
  updateMany?: Prisma.leaguesUpdateManyWithWhereWithoutPrior_leagueInput | Prisma.leaguesUpdateManyWithWhereWithoutPrior_leagueInput[]
  deleteMany?: Prisma.leaguesScalarWhereInput | Prisma.leaguesScalarWhereInput[]
}

export type leaguesCreateNestedManyWithoutPeopleInput = {
  create?: Prisma.XOR<Prisma.leaguesCreateWithoutPeopleInput, Prisma.leaguesUncheckedCreateWithoutPeopleInput> | Prisma.leaguesCreateWithoutPeopleInput[] | Prisma.leaguesUncheckedCreateWithoutPeopleInput[]
  connectOrCreate?: Prisma.leaguesCreateOrConnectWithoutPeopleInput | Prisma.leaguesCreateOrConnectWithoutPeopleInput[]
  createMany?: Prisma.leaguesCreateManyPeopleInputEnvelope
  connect?: Prisma.leaguesWhereUniqueInput | Prisma.leaguesWhereUniqueInput[]
}

export type leaguesUncheckedCreateNestedManyWithoutPeopleInput = {
  create?: Prisma.XOR<Prisma.leaguesCreateWithoutPeopleInput, Prisma.leaguesUncheckedCreateWithoutPeopleInput> | Prisma.leaguesCreateWithoutPeopleInput[] | Prisma.leaguesUncheckedCreateWithoutPeopleInput[]
  connectOrCreate?: Prisma.leaguesCreateOrConnectWithoutPeopleInput | Prisma.leaguesCreateOrConnectWithoutPeopleInput[]
  createMany?: Prisma.leaguesCreateManyPeopleInputEnvelope
  connect?: Prisma.leaguesWhereUniqueInput | Prisma.leaguesWhereUniqueInput[]
}

export type leaguesUpdateManyWithoutPeopleNestedInput = {
  create?: Prisma.XOR<Prisma.leaguesCreateWithoutPeopleInput, Prisma.leaguesUncheckedCreateWithoutPeopleInput> | Prisma.leaguesCreateWithoutPeopleInput[] | Prisma.leaguesUncheckedCreateWithoutPeopleInput[]
  connectOrCreate?: Prisma.leaguesCreateOrConnectWithoutPeopleInput | Prisma.leaguesCreateOrConnectWithoutPeopleInput[]
  upsert?: Prisma.leaguesUpsertWithWhereUniqueWithoutPeopleInput | Prisma.leaguesUpsertWithWhereUniqueWithoutPeopleInput[]
  createMany?: Prisma.leaguesCreateManyPeopleInputEnvelope
  set?: Prisma.leaguesWhereUniqueInput | Prisma.leaguesWhereUniqueInput[]
  disconnect?: Prisma.leaguesWhereUniqueInput | Prisma.leaguesWhereUniqueInput[]
  delete?: Prisma.leaguesWhereUniqueInput | Prisma.leaguesWhereUniqueInput[]
  connect?: Prisma.leaguesWhereUniqueInput | Prisma.leaguesWhereUniqueInput[]
  update?: Prisma.leaguesUpdateWithWhereUniqueWithoutPeopleInput | Prisma.leaguesUpdateWithWhereUniqueWithoutPeopleInput[]
  updateMany?: Prisma.leaguesUpdateManyWithWhereWithoutPeopleInput | Prisma.leaguesUpdateManyWithWhereWithoutPeopleInput[]
  deleteMany?: Prisma.leaguesScalarWhereInput | Prisma.leaguesScalarWhereInput[]
}

export type leaguesUncheckedUpdateManyWithoutPeopleNestedInput = {
  create?: Prisma.XOR<Prisma.leaguesCreateWithoutPeopleInput, Prisma.leaguesUncheckedCreateWithoutPeopleInput> | Prisma.leaguesCreateWithoutPeopleInput[] | Prisma.leaguesUncheckedCreateWithoutPeopleInput[]
  connectOrCreate?: Prisma.leaguesCreateOrConnectWithoutPeopleInput | Prisma.leaguesCreateOrConnectWithoutPeopleInput[]
  upsert?: Prisma.leaguesUpsertWithWhereUniqueWithoutPeopleInput | Prisma.leaguesUpsertWithWhereUniqueWithoutPeopleInput[]
  createMany?: Prisma.leaguesCreateManyPeopleInputEnvelope
  set?: Prisma.leaguesWhereUniqueInput | Prisma.leaguesWhereUniqueInput[]
  disconnect?: Prisma.leaguesWhereUniqueInput | Prisma.leaguesWhereUniqueInput[]
  delete?: Prisma.leaguesWhereUniqueInput | Prisma.leaguesWhereUniqueInput[]
  connect?: Prisma.leaguesWhereUniqueInput | Prisma.leaguesWhereUniqueInput[]
  update?: Prisma.leaguesUpdateWithWhereUniqueWithoutPeopleInput | Prisma.leaguesUpdateWithWhereUniqueWithoutPeopleInput[]
  updateMany?: Prisma.leaguesUpdateManyWithWhereWithoutPeopleInput | Prisma.leaguesUpdateManyWithWhereWithoutPeopleInput[]
  deleteMany?: Prisma.leaguesScalarWhereInput | Prisma.leaguesScalarWhereInput[]
}

export type leaguesCreateWithoutEmailLogsInput = {
  name: string
  created_time?: Date | string
  season: number
  late_policy?: $Enums.LatePolicy | null
  pick_policy?: $Enums.PickPolicy | null
  reminder_policy?: $Enums.ReminderPolicy | null
  scoring_type?: $Enums.ScoringType | null
  share_code?: string | null
  superbowl_competition?: boolean | null
  status?: $Enums.LeagueStatus
  WeekWinners?: Prisma.WeekWinnersCreateNestedManyWithoutLeaguesInput
  leaguemembers?: Prisma.leaguemembersCreateNestedManyWithoutLeaguesInput
  leaguemessages?: Prisma.leaguemessagesCreateNestedManyWithoutLeaguesInput
  people: Prisma.peopleCreateNestedOneWithoutLeaguesInput
  prior_league?: Prisma.leaguesCreateNestedOneWithoutFuture_leaguesInput
  future_leagues?: Prisma.leaguesCreateNestedManyWithoutPrior_leagueInput
}

export type leaguesUncheckedCreateWithoutEmailLogsInput = {
  league_id?: number
  created_by_user_id: number
  name: string
  created_time?: Date | string
  season: number
  late_policy?: $Enums.LatePolicy | null
  pick_policy?: $Enums.PickPolicy | null
  reminder_policy?: $Enums.ReminderPolicy | null
  scoring_type?: $Enums.ScoringType | null
  share_code?: string | null
  superbowl_competition?: boolean | null
  prior_league_id?: number | null
  status?: $Enums.LeagueStatus
  WeekWinners?: Prisma.WeekWinnersUncheckedCreateNestedManyWithoutLeaguesInput
  leaguemembers?: Prisma.leaguemembersUncheckedCreateNestedManyWithoutLeaguesInput
  leaguemessages?: Prisma.leaguemessagesUncheckedCreateNestedManyWithoutLeaguesInput
  future_leagues?: Prisma.leaguesUncheckedCreateNestedManyWithoutPrior_leagueInput
}

export type leaguesCreateOrConnectWithoutEmailLogsInput = {
  where: Prisma.leaguesWhereUniqueInput
  create: Prisma.XOR<Prisma.leaguesCreateWithoutEmailLogsInput, Prisma.leaguesUncheckedCreateWithoutEmailLogsInput>
}

export type leaguesUpsertWithoutEmailLogsInput = {
  update: Prisma.XOR<Prisma.leaguesUpdateWithoutEmailLogsInput, Prisma.leaguesUncheckedUpdateWithoutEmailLogsInput>
  create: Prisma.XOR<Prisma.leaguesCreateWithoutEmailLogsInput, Prisma.leaguesUncheckedCreateWithoutEmailLogsInput>
  where?: Prisma.leaguesWhereInput
}

export type leaguesUpdateToOneWithWhereWithoutEmailLogsInput = {
  where?: Prisma.leaguesWhereInput
  data: Prisma.XOR<Prisma.leaguesUpdateWithoutEmailLogsInput, Prisma.leaguesUncheckedUpdateWithoutEmailLogsInput>
}

export type leaguesUpdateWithoutEmailLogsInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  created_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  season?: Prisma.IntFieldUpdateOperationsInput | number
  late_policy?: Prisma.NullableEnumLatePolicyFieldUpdateOperationsInput | $Enums.LatePolicy | null
  pick_policy?: Prisma.NullableEnumPickPolicyFieldUpdateOperationsInput | $Enums.PickPolicy | null
  reminder_policy?: Prisma.NullableEnumReminderPolicyFieldUpdateOperationsInput | $Enums.ReminderPolicy | null
  scoring_type?: Prisma.NullableEnumScoringTypeFieldUpdateOperationsInput | $Enums.ScoringType | null
  share_code?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  superbowl_competition?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  status?: Prisma.EnumLeagueStatusFieldUpdateOperationsInput | $Enums.LeagueStatus
  WeekWinners?: Prisma.WeekWinnersUpdateManyWithoutLeaguesNestedInput
  leaguemembers?: Prisma.leaguemembersUpdateManyWithoutLeaguesNestedInput
  leaguemessages?: Prisma.leaguemessagesUpdateManyWithoutLeaguesNestedInput
  people?: Prisma.peopleUpdateOneRequiredWithoutLeaguesNestedInput
  prior_league?: Prisma.leaguesUpdateOneWithoutFuture_leaguesNestedInput
  future_leagues?: Prisma.leaguesUpdateManyWithoutPrior_leagueNestedInput
}

export type leaguesUncheckedUpdateWithoutEmailLogsInput = {
  league_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_user_id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  created_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  season?: Prisma.IntFieldUpdateOperationsInput | number
  late_policy?: Prisma.NullableEnumLatePolicyFieldUpdateOperationsInput | $Enums.LatePolicy | null
  pick_policy?: Prisma.NullableEnumPickPolicyFieldUpdateOperationsInput | $Enums.PickPolicy | null
  reminder_policy?: Prisma.NullableEnumReminderPolicyFieldUpdateOperationsInput | $Enums.ReminderPolicy | null
  scoring_type?: Prisma.NullableEnumScoringTypeFieldUpdateOperationsInput | $Enums.ScoringType | null
  share_code?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  superbowl_competition?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  prior_league_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumLeagueStatusFieldUpdateOperationsInput | $Enums.LeagueStatus
  WeekWinners?: Prisma.WeekWinnersUncheckedUpdateManyWithoutLeaguesNestedInput
  leaguemembers?: Prisma.leaguemembersUncheckedUpdateManyWithoutLeaguesNestedInput
  leaguemessages?: Prisma.leaguemessagesUncheckedUpdateManyWithoutLeaguesNestedInput
  future_leagues?: Prisma.leaguesUncheckedUpdateManyWithoutPrior_leagueNestedInput
}

export type leaguesCreateWithoutWeekWinnersInput = {
  name: string
  created_time?: Date | string
  season: number
  late_policy?: $Enums.LatePolicy | null
  pick_policy?: $Enums.PickPolicy | null
  reminder_policy?: $Enums.ReminderPolicy | null
  scoring_type?: $Enums.ScoringType | null
  share_code?: string | null
  superbowl_competition?: boolean | null
  status?: $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsCreateNestedManyWithoutLeaguesInput
  leaguemembers?: Prisma.leaguemembersCreateNestedManyWithoutLeaguesInput
  leaguemessages?: Prisma.leaguemessagesCreateNestedManyWithoutLeaguesInput
  people: Prisma.peopleCreateNestedOneWithoutLeaguesInput
  prior_league?: Prisma.leaguesCreateNestedOneWithoutFuture_leaguesInput
  future_leagues?: Prisma.leaguesCreateNestedManyWithoutPrior_leagueInput
}

export type leaguesUncheckedCreateWithoutWeekWinnersInput = {
  league_id?: number
  created_by_user_id: number
  name: string
  created_time?: Date | string
  season: number
  late_policy?: $Enums.LatePolicy | null
  pick_policy?: $Enums.PickPolicy | null
  reminder_policy?: $Enums.ReminderPolicy | null
  scoring_type?: $Enums.ScoringType | null
  share_code?: string | null
  superbowl_competition?: boolean | null
  prior_league_id?: number | null
  status?: $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsUncheckedCreateNestedManyWithoutLeaguesInput
  leaguemembers?: Prisma.leaguemembersUncheckedCreateNestedManyWithoutLeaguesInput
  leaguemessages?: Prisma.leaguemessagesUncheckedCreateNestedManyWithoutLeaguesInput
  future_leagues?: Prisma.leaguesUncheckedCreateNestedManyWithoutPrior_leagueInput
}

export type leaguesCreateOrConnectWithoutWeekWinnersInput = {
  where: Prisma.leaguesWhereUniqueInput
  create: Prisma.XOR<Prisma.leaguesCreateWithoutWeekWinnersInput, Prisma.leaguesUncheckedCreateWithoutWeekWinnersInput>
}

export type leaguesUpsertWithoutWeekWinnersInput = {
  update: Prisma.XOR<Prisma.leaguesUpdateWithoutWeekWinnersInput, Prisma.leaguesUncheckedUpdateWithoutWeekWinnersInput>
  create: Prisma.XOR<Prisma.leaguesCreateWithoutWeekWinnersInput, Prisma.leaguesUncheckedCreateWithoutWeekWinnersInput>
  where?: Prisma.leaguesWhereInput
}

export type leaguesUpdateToOneWithWhereWithoutWeekWinnersInput = {
  where?: Prisma.leaguesWhereInput
  data: Prisma.XOR<Prisma.leaguesUpdateWithoutWeekWinnersInput, Prisma.leaguesUncheckedUpdateWithoutWeekWinnersInput>
}

export type leaguesUpdateWithoutWeekWinnersInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  created_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  season?: Prisma.IntFieldUpdateOperationsInput | number
  late_policy?: Prisma.NullableEnumLatePolicyFieldUpdateOperationsInput | $Enums.LatePolicy | null
  pick_policy?: Prisma.NullableEnumPickPolicyFieldUpdateOperationsInput | $Enums.PickPolicy | null
  reminder_policy?: Prisma.NullableEnumReminderPolicyFieldUpdateOperationsInput | $Enums.ReminderPolicy | null
  scoring_type?: Prisma.NullableEnumScoringTypeFieldUpdateOperationsInput | $Enums.ScoringType | null
  share_code?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  superbowl_competition?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  status?: Prisma.EnumLeagueStatusFieldUpdateOperationsInput | $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsUpdateManyWithoutLeaguesNestedInput
  leaguemembers?: Prisma.leaguemembersUpdateManyWithoutLeaguesNestedInput
  leaguemessages?: Prisma.leaguemessagesUpdateManyWithoutLeaguesNestedInput
  people?: Prisma.peopleUpdateOneRequiredWithoutLeaguesNestedInput
  prior_league?: Prisma.leaguesUpdateOneWithoutFuture_leaguesNestedInput
  future_leagues?: Prisma.leaguesUpdateManyWithoutPrior_leagueNestedInput
}

export type leaguesUncheckedUpdateWithoutWeekWinnersInput = {
  league_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_user_id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  created_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  season?: Prisma.IntFieldUpdateOperationsInput | number
  late_policy?: Prisma.NullableEnumLatePolicyFieldUpdateOperationsInput | $Enums.LatePolicy | null
  pick_policy?: Prisma.NullableEnumPickPolicyFieldUpdateOperationsInput | $Enums.PickPolicy | null
  reminder_policy?: Prisma.NullableEnumReminderPolicyFieldUpdateOperationsInput | $Enums.ReminderPolicy | null
  scoring_type?: Prisma.NullableEnumScoringTypeFieldUpdateOperationsInput | $Enums.ScoringType | null
  share_code?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  superbowl_competition?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  prior_league_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumLeagueStatusFieldUpdateOperationsInput | $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsUncheckedUpdateManyWithoutLeaguesNestedInput
  leaguemembers?: Prisma.leaguemembersUncheckedUpdateManyWithoutLeaguesNestedInput
  leaguemessages?: Prisma.leaguemessagesUncheckedUpdateManyWithoutLeaguesNestedInput
  future_leagues?: Prisma.leaguesUncheckedUpdateManyWithoutPrior_leagueNestedInput
}

export type leaguesCreateWithoutLeaguemembersInput = {
  name: string
  created_time?: Date | string
  season: number
  late_policy?: $Enums.LatePolicy | null
  pick_policy?: $Enums.PickPolicy | null
  reminder_policy?: $Enums.ReminderPolicy | null
  scoring_type?: $Enums.ScoringType | null
  share_code?: string | null
  superbowl_competition?: boolean | null
  status?: $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsCreateNestedManyWithoutLeaguesInput
  WeekWinners?: Prisma.WeekWinnersCreateNestedManyWithoutLeaguesInput
  leaguemessages?: Prisma.leaguemessagesCreateNestedManyWithoutLeaguesInput
  people: Prisma.peopleCreateNestedOneWithoutLeaguesInput
  prior_league?: Prisma.leaguesCreateNestedOneWithoutFuture_leaguesInput
  future_leagues?: Prisma.leaguesCreateNestedManyWithoutPrior_leagueInput
}

export type leaguesUncheckedCreateWithoutLeaguemembersInput = {
  league_id?: number
  created_by_user_id: number
  name: string
  created_time?: Date | string
  season: number
  late_policy?: $Enums.LatePolicy | null
  pick_policy?: $Enums.PickPolicy | null
  reminder_policy?: $Enums.ReminderPolicy | null
  scoring_type?: $Enums.ScoringType | null
  share_code?: string | null
  superbowl_competition?: boolean | null
  prior_league_id?: number | null
  status?: $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsUncheckedCreateNestedManyWithoutLeaguesInput
  WeekWinners?: Prisma.WeekWinnersUncheckedCreateNestedManyWithoutLeaguesInput
  leaguemessages?: Prisma.leaguemessagesUncheckedCreateNestedManyWithoutLeaguesInput
  future_leagues?: Prisma.leaguesUncheckedCreateNestedManyWithoutPrior_leagueInput
}

export type leaguesCreateOrConnectWithoutLeaguemembersInput = {
  where: Prisma.leaguesWhereUniqueInput
  create: Prisma.XOR<Prisma.leaguesCreateWithoutLeaguemembersInput, Prisma.leaguesUncheckedCreateWithoutLeaguemembersInput>
}

export type leaguesUpsertWithoutLeaguemembersInput = {
  update: Prisma.XOR<Prisma.leaguesUpdateWithoutLeaguemembersInput, Prisma.leaguesUncheckedUpdateWithoutLeaguemembersInput>
  create: Prisma.XOR<Prisma.leaguesCreateWithoutLeaguemembersInput, Prisma.leaguesUncheckedCreateWithoutLeaguemembersInput>
  where?: Prisma.leaguesWhereInput
}

export type leaguesUpdateToOneWithWhereWithoutLeaguemembersInput = {
  where?: Prisma.leaguesWhereInput
  data: Prisma.XOR<Prisma.leaguesUpdateWithoutLeaguemembersInput, Prisma.leaguesUncheckedUpdateWithoutLeaguemembersInput>
}

export type leaguesUpdateWithoutLeaguemembersInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  created_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  season?: Prisma.IntFieldUpdateOperationsInput | number
  late_policy?: Prisma.NullableEnumLatePolicyFieldUpdateOperationsInput | $Enums.LatePolicy | null
  pick_policy?: Prisma.NullableEnumPickPolicyFieldUpdateOperationsInput | $Enums.PickPolicy | null
  reminder_policy?: Prisma.NullableEnumReminderPolicyFieldUpdateOperationsInput | $Enums.ReminderPolicy | null
  scoring_type?: Prisma.NullableEnumScoringTypeFieldUpdateOperationsInput | $Enums.ScoringType | null
  share_code?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  superbowl_competition?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  status?: Prisma.EnumLeagueStatusFieldUpdateOperationsInput | $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsUpdateManyWithoutLeaguesNestedInput
  WeekWinners?: Prisma.WeekWinnersUpdateManyWithoutLeaguesNestedInput
  leaguemessages?: Prisma.leaguemessagesUpdateManyWithoutLeaguesNestedInput
  people?: Prisma.peopleUpdateOneRequiredWithoutLeaguesNestedInput
  prior_league?: Prisma.leaguesUpdateOneWithoutFuture_leaguesNestedInput
  future_leagues?: Prisma.leaguesUpdateManyWithoutPrior_leagueNestedInput
}

export type leaguesUncheckedUpdateWithoutLeaguemembersInput = {
  league_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_user_id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  created_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  season?: Prisma.IntFieldUpdateOperationsInput | number
  late_policy?: Prisma.NullableEnumLatePolicyFieldUpdateOperationsInput | $Enums.LatePolicy | null
  pick_policy?: Prisma.NullableEnumPickPolicyFieldUpdateOperationsInput | $Enums.PickPolicy | null
  reminder_policy?: Prisma.NullableEnumReminderPolicyFieldUpdateOperationsInput | $Enums.ReminderPolicy | null
  scoring_type?: Prisma.NullableEnumScoringTypeFieldUpdateOperationsInput | $Enums.ScoringType | null
  share_code?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  superbowl_competition?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  prior_league_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumLeagueStatusFieldUpdateOperationsInput | $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsUncheckedUpdateManyWithoutLeaguesNestedInput
  WeekWinners?: Prisma.WeekWinnersUncheckedUpdateManyWithoutLeaguesNestedInput
  leaguemessages?: Prisma.leaguemessagesUncheckedUpdateManyWithoutLeaguesNestedInput
  future_leagues?: Prisma.leaguesUncheckedUpdateManyWithoutPrior_leagueNestedInput
}

export type leaguesCreateWithoutLeaguemessagesInput = {
  name: string
  created_time?: Date | string
  season: number
  late_policy?: $Enums.LatePolicy | null
  pick_policy?: $Enums.PickPolicy | null
  reminder_policy?: $Enums.ReminderPolicy | null
  scoring_type?: $Enums.ScoringType | null
  share_code?: string | null
  superbowl_competition?: boolean | null
  status?: $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsCreateNestedManyWithoutLeaguesInput
  WeekWinners?: Prisma.WeekWinnersCreateNestedManyWithoutLeaguesInput
  leaguemembers?: Prisma.leaguemembersCreateNestedManyWithoutLeaguesInput
  people: Prisma.peopleCreateNestedOneWithoutLeaguesInput
  prior_league?: Prisma.leaguesCreateNestedOneWithoutFuture_leaguesInput
  future_leagues?: Prisma.leaguesCreateNestedManyWithoutPrior_leagueInput
}

export type leaguesUncheckedCreateWithoutLeaguemessagesInput = {
  league_id?: number
  created_by_user_id: number
  name: string
  created_time?: Date | string
  season: number
  late_policy?: $Enums.LatePolicy | null
  pick_policy?: $Enums.PickPolicy | null
  reminder_policy?: $Enums.ReminderPolicy | null
  scoring_type?: $Enums.ScoringType | null
  share_code?: string | null
  superbowl_competition?: boolean | null
  prior_league_id?: number | null
  status?: $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsUncheckedCreateNestedManyWithoutLeaguesInput
  WeekWinners?: Prisma.WeekWinnersUncheckedCreateNestedManyWithoutLeaguesInput
  leaguemembers?: Prisma.leaguemembersUncheckedCreateNestedManyWithoutLeaguesInput
  future_leagues?: Prisma.leaguesUncheckedCreateNestedManyWithoutPrior_leagueInput
}

export type leaguesCreateOrConnectWithoutLeaguemessagesInput = {
  where: Prisma.leaguesWhereUniqueInput
  create: Prisma.XOR<Prisma.leaguesCreateWithoutLeaguemessagesInput, Prisma.leaguesUncheckedCreateWithoutLeaguemessagesInput>
}

export type leaguesUpsertWithoutLeaguemessagesInput = {
  update: Prisma.XOR<Prisma.leaguesUpdateWithoutLeaguemessagesInput, Prisma.leaguesUncheckedUpdateWithoutLeaguemessagesInput>
  create: Prisma.XOR<Prisma.leaguesCreateWithoutLeaguemessagesInput, Prisma.leaguesUncheckedCreateWithoutLeaguemessagesInput>
  where?: Prisma.leaguesWhereInput
}

export type leaguesUpdateToOneWithWhereWithoutLeaguemessagesInput = {
  where?: Prisma.leaguesWhereInput
  data: Prisma.XOR<Prisma.leaguesUpdateWithoutLeaguemessagesInput, Prisma.leaguesUncheckedUpdateWithoutLeaguemessagesInput>
}

export type leaguesUpdateWithoutLeaguemessagesInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  created_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  season?: Prisma.IntFieldUpdateOperationsInput | number
  late_policy?: Prisma.NullableEnumLatePolicyFieldUpdateOperationsInput | $Enums.LatePolicy | null
  pick_policy?: Prisma.NullableEnumPickPolicyFieldUpdateOperationsInput | $Enums.PickPolicy | null
  reminder_policy?: Prisma.NullableEnumReminderPolicyFieldUpdateOperationsInput | $Enums.ReminderPolicy | null
  scoring_type?: Prisma.NullableEnumScoringTypeFieldUpdateOperationsInput | $Enums.ScoringType | null
  share_code?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  superbowl_competition?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  status?: Prisma.EnumLeagueStatusFieldUpdateOperationsInput | $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsUpdateManyWithoutLeaguesNestedInput
  WeekWinners?: Prisma.WeekWinnersUpdateManyWithoutLeaguesNestedInput
  leaguemembers?: Prisma.leaguemembersUpdateManyWithoutLeaguesNestedInput
  people?: Prisma.peopleUpdateOneRequiredWithoutLeaguesNestedInput
  prior_league?: Prisma.leaguesUpdateOneWithoutFuture_leaguesNestedInput
  future_leagues?: Prisma.leaguesUpdateManyWithoutPrior_leagueNestedInput
}

export type leaguesUncheckedUpdateWithoutLeaguemessagesInput = {
  league_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_user_id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  created_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  season?: Prisma.IntFieldUpdateOperationsInput | number
  late_policy?: Prisma.NullableEnumLatePolicyFieldUpdateOperationsInput | $Enums.LatePolicy | null
  pick_policy?: Prisma.NullableEnumPickPolicyFieldUpdateOperationsInput | $Enums.PickPolicy | null
  reminder_policy?: Prisma.NullableEnumReminderPolicyFieldUpdateOperationsInput | $Enums.ReminderPolicy | null
  scoring_type?: Prisma.NullableEnumScoringTypeFieldUpdateOperationsInput | $Enums.ScoringType | null
  share_code?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  superbowl_competition?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  prior_league_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumLeagueStatusFieldUpdateOperationsInput | $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsUncheckedUpdateManyWithoutLeaguesNestedInput
  WeekWinners?: Prisma.WeekWinnersUncheckedUpdateManyWithoutLeaguesNestedInput
  leaguemembers?: Prisma.leaguemembersUncheckedUpdateManyWithoutLeaguesNestedInput
  future_leagues?: Prisma.leaguesUncheckedUpdateManyWithoutPrior_leagueNestedInput
}

export type leaguesCreateWithoutFuture_leaguesInput = {
  name: string
  created_time?: Date | string
  season: number
  late_policy?: $Enums.LatePolicy | null
  pick_policy?: $Enums.PickPolicy | null
  reminder_policy?: $Enums.ReminderPolicy | null
  scoring_type?: $Enums.ScoringType | null
  share_code?: string | null
  superbowl_competition?: boolean | null
  status?: $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsCreateNestedManyWithoutLeaguesInput
  WeekWinners?: Prisma.WeekWinnersCreateNestedManyWithoutLeaguesInput
  leaguemembers?: Prisma.leaguemembersCreateNestedManyWithoutLeaguesInput
  leaguemessages?: Prisma.leaguemessagesCreateNestedManyWithoutLeaguesInput
  people: Prisma.peopleCreateNestedOneWithoutLeaguesInput
  prior_league?: Prisma.leaguesCreateNestedOneWithoutFuture_leaguesInput
}

export type leaguesUncheckedCreateWithoutFuture_leaguesInput = {
  league_id?: number
  created_by_user_id: number
  name: string
  created_time?: Date | string
  season: number
  late_policy?: $Enums.LatePolicy | null
  pick_policy?: $Enums.PickPolicy | null
  reminder_policy?: $Enums.ReminderPolicy | null
  scoring_type?: $Enums.ScoringType | null
  share_code?: string | null
  superbowl_competition?: boolean | null
  prior_league_id?: number | null
  status?: $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsUncheckedCreateNestedManyWithoutLeaguesInput
  WeekWinners?: Prisma.WeekWinnersUncheckedCreateNestedManyWithoutLeaguesInput
  leaguemembers?: Prisma.leaguemembersUncheckedCreateNestedManyWithoutLeaguesInput
  leaguemessages?: Prisma.leaguemessagesUncheckedCreateNestedManyWithoutLeaguesInput
}

export type leaguesCreateOrConnectWithoutFuture_leaguesInput = {
  where: Prisma.leaguesWhereUniqueInput
  create: Prisma.XOR<Prisma.leaguesCreateWithoutFuture_leaguesInput, Prisma.leaguesUncheckedCreateWithoutFuture_leaguesInput>
}

export type leaguesCreateWithoutPrior_leagueInput = {
  name: string
  created_time?: Date | string
  season: number
  late_policy?: $Enums.LatePolicy | null
  pick_policy?: $Enums.PickPolicy | null
  reminder_policy?: $Enums.ReminderPolicy | null
  scoring_type?: $Enums.ScoringType | null
  share_code?: string | null
  superbowl_competition?: boolean | null
  status?: $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsCreateNestedManyWithoutLeaguesInput
  WeekWinners?: Prisma.WeekWinnersCreateNestedManyWithoutLeaguesInput
  leaguemembers?: Prisma.leaguemembersCreateNestedManyWithoutLeaguesInput
  leaguemessages?: Prisma.leaguemessagesCreateNestedManyWithoutLeaguesInput
  people: Prisma.peopleCreateNestedOneWithoutLeaguesInput
  future_leagues?: Prisma.leaguesCreateNestedManyWithoutPrior_leagueInput
}

export type leaguesUncheckedCreateWithoutPrior_leagueInput = {
  league_id?: number
  created_by_user_id: number
  name: string
  created_time?: Date | string
  season: number
  late_policy?: $Enums.LatePolicy | null
  pick_policy?: $Enums.PickPolicy | null
  reminder_policy?: $Enums.ReminderPolicy | null
  scoring_type?: $Enums.ScoringType | null
  share_code?: string | null
  superbowl_competition?: boolean | null
  status?: $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsUncheckedCreateNestedManyWithoutLeaguesInput
  WeekWinners?: Prisma.WeekWinnersUncheckedCreateNestedManyWithoutLeaguesInput
  leaguemembers?: Prisma.leaguemembersUncheckedCreateNestedManyWithoutLeaguesInput
  leaguemessages?: Prisma.leaguemessagesUncheckedCreateNestedManyWithoutLeaguesInput
  future_leagues?: Prisma.leaguesUncheckedCreateNestedManyWithoutPrior_leagueInput
}

export type leaguesCreateOrConnectWithoutPrior_leagueInput = {
  where: Prisma.leaguesWhereUniqueInput
  create: Prisma.XOR<Prisma.leaguesCreateWithoutPrior_leagueInput, Prisma.leaguesUncheckedCreateWithoutPrior_leagueInput>
}

export type leaguesCreateManyPrior_leagueInputEnvelope = {
  data: Prisma.leaguesCreateManyPrior_leagueInput | Prisma.leaguesCreateManyPrior_leagueInput[]
  skipDuplicates?: boolean
}

export type leaguesUpsertWithoutFuture_leaguesInput = {
  update: Prisma.XOR<Prisma.leaguesUpdateWithoutFuture_leaguesInput, Prisma.leaguesUncheckedUpdateWithoutFuture_leaguesInput>
  create: Prisma.XOR<Prisma.leaguesCreateWithoutFuture_leaguesInput, Prisma.leaguesUncheckedCreateWithoutFuture_leaguesInput>
  where?: Prisma.leaguesWhereInput
}

export type leaguesUpdateToOneWithWhereWithoutFuture_leaguesInput = {
  where?: Prisma.leaguesWhereInput
  data: Prisma.XOR<Prisma.leaguesUpdateWithoutFuture_leaguesInput, Prisma.leaguesUncheckedUpdateWithoutFuture_leaguesInput>
}

export type leaguesUpdateWithoutFuture_leaguesInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  created_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  season?: Prisma.IntFieldUpdateOperationsInput | number
  late_policy?: Prisma.NullableEnumLatePolicyFieldUpdateOperationsInput | $Enums.LatePolicy | null
  pick_policy?: Prisma.NullableEnumPickPolicyFieldUpdateOperationsInput | $Enums.PickPolicy | null
  reminder_policy?: Prisma.NullableEnumReminderPolicyFieldUpdateOperationsInput | $Enums.ReminderPolicy | null
  scoring_type?: Prisma.NullableEnumScoringTypeFieldUpdateOperationsInput | $Enums.ScoringType | null
  share_code?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  superbowl_competition?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  status?: Prisma.EnumLeagueStatusFieldUpdateOperationsInput | $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsUpdateManyWithoutLeaguesNestedInput
  WeekWinners?: Prisma.WeekWinnersUpdateManyWithoutLeaguesNestedInput
  leaguemembers?: Prisma.leaguemembersUpdateManyWithoutLeaguesNestedInput
  leaguemessages?: Prisma.leaguemessagesUpdateManyWithoutLeaguesNestedInput
  people?: Prisma.peopleUpdateOneRequiredWithoutLeaguesNestedInput
  prior_league?: Prisma.leaguesUpdateOneWithoutFuture_leaguesNestedInput
}

export type leaguesUncheckedUpdateWithoutFuture_leaguesInput = {
  league_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_user_id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  created_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  season?: Prisma.IntFieldUpdateOperationsInput | number
  late_policy?: Prisma.NullableEnumLatePolicyFieldUpdateOperationsInput | $Enums.LatePolicy | null
  pick_policy?: Prisma.NullableEnumPickPolicyFieldUpdateOperationsInput | $Enums.PickPolicy | null
  reminder_policy?: Prisma.NullableEnumReminderPolicyFieldUpdateOperationsInput | $Enums.ReminderPolicy | null
  scoring_type?: Prisma.NullableEnumScoringTypeFieldUpdateOperationsInput | $Enums.ScoringType | null
  share_code?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  superbowl_competition?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  prior_league_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumLeagueStatusFieldUpdateOperationsInput | $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsUncheckedUpdateManyWithoutLeaguesNestedInput
  WeekWinners?: Prisma.WeekWinnersUncheckedUpdateManyWithoutLeaguesNestedInput
  leaguemembers?: Prisma.leaguemembersUncheckedUpdateManyWithoutLeaguesNestedInput
  leaguemessages?: Prisma.leaguemessagesUncheckedUpdateManyWithoutLeaguesNestedInput
}

export type leaguesUpsertWithWhereUniqueWithoutPrior_leagueInput = {
  where: Prisma.leaguesWhereUniqueInput
  update: Prisma.XOR<Prisma.leaguesUpdateWithoutPrior_leagueInput, Prisma.leaguesUncheckedUpdateWithoutPrior_leagueInput>
  create: Prisma.XOR<Prisma.leaguesCreateWithoutPrior_leagueInput, Prisma.leaguesUncheckedCreateWithoutPrior_leagueInput>
}

export type leaguesUpdateWithWhereUniqueWithoutPrior_leagueInput = {
  where: Prisma.leaguesWhereUniqueInput
  data: Prisma.XOR<Prisma.leaguesUpdateWithoutPrior_leagueInput, Prisma.leaguesUncheckedUpdateWithoutPrior_leagueInput>
}

export type leaguesUpdateManyWithWhereWithoutPrior_leagueInput = {
  where: Prisma.leaguesScalarWhereInput
  data: Prisma.XOR<Prisma.leaguesUpdateManyMutationInput, Prisma.leaguesUncheckedUpdateManyWithoutPrior_leagueInput>
}

export type leaguesScalarWhereInput = {
  AND?: Prisma.leaguesScalarWhereInput | Prisma.leaguesScalarWhereInput[]
  OR?: Prisma.leaguesScalarWhereInput[]
  NOT?: Prisma.leaguesScalarWhereInput | Prisma.leaguesScalarWhereInput[]
  league_id?: Prisma.IntFilter<"leagues"> | number
  created_by_user_id?: Prisma.IntFilter<"leagues"> | number
  name?: Prisma.StringFilter<"leagues"> | string
  created_time?: Prisma.DateTimeFilter<"leagues"> | Date | string
  season?: Prisma.IntFilter<"leagues"> | number
  late_policy?: Prisma.EnumLatePolicyNullableFilter<"leagues"> | $Enums.LatePolicy | null
  pick_policy?: Prisma.EnumPickPolicyNullableFilter<"leagues"> | $Enums.PickPolicy | null
  reminder_policy?: Prisma.EnumReminderPolicyNullableFilter<"leagues"> | $Enums.ReminderPolicy | null
  scoring_type?: Prisma.EnumScoringTypeNullableFilter<"leagues"> | $Enums.ScoringType | null
  share_code?: Prisma.StringNullableFilter<"leagues"> | string | null
  superbowl_competition?: Prisma.BoolNullableFilter<"leagues"> | boolean | null
  prior_league_id?: Prisma.IntNullableFilter<"leagues"> | number | null
  status?: Prisma.EnumLeagueStatusFilter<"leagues"> | $Enums.LeagueStatus
}

export type leaguesCreateWithoutPeopleInput = {
  name: string
  created_time?: Date | string
  season: number
  late_policy?: $Enums.LatePolicy | null
  pick_policy?: $Enums.PickPolicy | null
  reminder_policy?: $Enums.ReminderPolicy | null
  scoring_type?: $Enums.ScoringType | null
  share_code?: string | null
  superbowl_competition?: boolean | null
  status?: $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsCreateNestedManyWithoutLeaguesInput
  WeekWinners?: Prisma.WeekWinnersCreateNestedManyWithoutLeaguesInput
  leaguemembers?: Prisma.leaguemembersCreateNestedManyWithoutLeaguesInput
  leaguemessages?: Prisma.leaguemessagesCreateNestedManyWithoutLeaguesInput
  prior_league?: Prisma.leaguesCreateNestedOneWithoutFuture_leaguesInput
  future_leagues?: Prisma.leaguesCreateNestedManyWithoutPrior_leagueInput
}

export type leaguesUncheckedCreateWithoutPeopleInput = {
  league_id?: number
  name: string
  created_time?: Date | string
  season: number
  late_policy?: $Enums.LatePolicy | null
  pick_policy?: $Enums.PickPolicy | null
  reminder_policy?: $Enums.ReminderPolicy | null
  scoring_type?: $Enums.ScoringType | null
  share_code?: string | null
  superbowl_competition?: boolean | null
  prior_league_id?: number | null
  status?: $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsUncheckedCreateNestedManyWithoutLeaguesInput
  WeekWinners?: Prisma.WeekWinnersUncheckedCreateNestedManyWithoutLeaguesInput
  leaguemembers?: Prisma.leaguemembersUncheckedCreateNestedManyWithoutLeaguesInput
  leaguemessages?: Prisma.leaguemessagesUncheckedCreateNestedManyWithoutLeaguesInput
  future_leagues?: Prisma.leaguesUncheckedCreateNestedManyWithoutPrior_leagueInput
}

export type leaguesCreateOrConnectWithoutPeopleInput = {
  where: Prisma.leaguesWhereUniqueInput
  create: Prisma.XOR<Prisma.leaguesCreateWithoutPeopleInput, Prisma.leaguesUncheckedCreateWithoutPeopleInput>
}

export type leaguesCreateManyPeopleInputEnvelope = {
  data: Prisma.leaguesCreateManyPeopleInput | Prisma.leaguesCreateManyPeopleInput[]
  skipDuplicates?: boolean
}

export type leaguesUpsertWithWhereUniqueWithoutPeopleInput = {
  where: Prisma.leaguesWhereUniqueInput
  update: Prisma.XOR<Prisma.leaguesUpdateWithoutPeopleInput, Prisma.leaguesUncheckedUpdateWithoutPeopleInput>
  create: Prisma.XOR<Prisma.leaguesCreateWithoutPeopleInput, Prisma.leaguesUncheckedCreateWithoutPeopleInput>
}

export type leaguesUpdateWithWhereUniqueWithoutPeopleInput = {
  where: Prisma.leaguesWhereUniqueInput
  data: Prisma.XOR<Prisma.leaguesUpdateWithoutPeopleInput, Prisma.leaguesUncheckedUpdateWithoutPeopleInput>
}

export type leaguesUpdateManyWithWhereWithoutPeopleInput = {
  where: Prisma.leaguesScalarWhereInput
  data: Prisma.XOR<Prisma.leaguesUpdateManyMutationInput, Prisma.leaguesUncheckedUpdateManyWithoutPeopleInput>
}

export type leaguesCreateManyPrior_leagueInput = {
  league_id?: number
  created_by_user_id: number
  name: string
  created_time?: Date | string
  season: number
  late_policy?: $Enums.LatePolicy | null
  pick_policy?: $Enums.PickPolicy | null
  reminder_policy?: $Enums.ReminderPolicy | null
  scoring_type?: $Enums.ScoringType | null
  share_code?: string | null
  superbowl_competition?: boolean | null
  status?: $Enums.LeagueStatus
}

export type leaguesUpdateWithoutPrior_leagueInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  created_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  season?: Prisma.IntFieldUpdateOperationsInput | number
  late_policy?: Prisma.NullableEnumLatePolicyFieldUpdateOperationsInput | $Enums.LatePolicy | null
  pick_policy?: Prisma.NullableEnumPickPolicyFieldUpdateOperationsInput | $Enums.PickPolicy | null
  reminder_policy?: Prisma.NullableEnumReminderPolicyFieldUpdateOperationsInput | $Enums.ReminderPolicy | null
  scoring_type?: Prisma.NullableEnumScoringTypeFieldUpdateOperationsInput | $Enums.ScoringType | null
  share_code?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  superbowl_competition?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  status?: Prisma.EnumLeagueStatusFieldUpdateOperationsInput | $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsUpdateManyWithoutLeaguesNestedInput
  WeekWinners?: Prisma.WeekWinnersUpdateManyWithoutLeaguesNestedInput
  leaguemembers?: Prisma.leaguemembersUpdateManyWithoutLeaguesNestedInput
  leaguemessages?: Prisma.leaguemessagesUpdateManyWithoutLeaguesNestedInput
  people?: Prisma.peopleUpdateOneRequiredWithoutLeaguesNestedInput
  future_leagues?: Prisma.leaguesUpdateManyWithoutPrior_leagueNestedInput
}

export type leaguesUncheckedUpdateWithoutPrior_leagueInput = {
  league_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_user_id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  created_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  season?: Prisma.IntFieldUpdateOperationsInput | number
  late_policy?: Prisma.NullableEnumLatePolicyFieldUpdateOperationsInput | $Enums.LatePolicy | null
  pick_policy?: Prisma.NullableEnumPickPolicyFieldUpdateOperationsInput | $Enums.PickPolicy | null
  reminder_policy?: Prisma.NullableEnumReminderPolicyFieldUpdateOperationsInput | $Enums.ReminderPolicy | null
  scoring_type?: Prisma.NullableEnumScoringTypeFieldUpdateOperationsInput | $Enums.ScoringType | null
  share_code?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  superbowl_competition?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  status?: Prisma.EnumLeagueStatusFieldUpdateOperationsInput | $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsUncheckedUpdateManyWithoutLeaguesNestedInput
  WeekWinners?: Prisma.WeekWinnersUncheckedUpdateManyWithoutLeaguesNestedInput
  leaguemembers?: Prisma.leaguemembersUncheckedUpdateManyWithoutLeaguesNestedInput
  leaguemessages?: Prisma.leaguemessagesUncheckedUpdateManyWithoutLeaguesNestedInput
  future_leagues?: Prisma.leaguesUncheckedUpdateManyWithoutPrior_leagueNestedInput
}

export type leaguesUncheckedUpdateManyWithoutPrior_leagueInput = {
  league_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_user_id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  created_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  season?: Prisma.IntFieldUpdateOperationsInput | number
  late_policy?: Prisma.NullableEnumLatePolicyFieldUpdateOperationsInput | $Enums.LatePolicy | null
  pick_policy?: Prisma.NullableEnumPickPolicyFieldUpdateOperationsInput | $Enums.PickPolicy | null
  reminder_policy?: Prisma.NullableEnumReminderPolicyFieldUpdateOperationsInput | $Enums.ReminderPolicy | null
  scoring_type?: Prisma.NullableEnumScoringTypeFieldUpdateOperationsInput | $Enums.ScoringType | null
  share_code?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  superbowl_competition?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  status?: Prisma.EnumLeagueStatusFieldUpdateOperationsInput | $Enums.LeagueStatus
}

export type leaguesCreateManyPeopleInput = {
  league_id?: number
  name: string
  created_time?: Date | string
  season: number
  late_policy?: $Enums.LatePolicy | null
  pick_policy?: $Enums.PickPolicy | null
  reminder_policy?: $Enums.ReminderPolicy | null
  scoring_type?: $Enums.ScoringType | null
  share_code?: string | null
  superbowl_competition?: boolean | null
  prior_league_id?: number | null
  status?: $Enums.LeagueStatus
}

export type leaguesUpdateWithoutPeopleInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  created_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  season?: Prisma.IntFieldUpdateOperationsInput | number
  late_policy?: Prisma.NullableEnumLatePolicyFieldUpdateOperationsInput | $Enums.LatePolicy | null
  pick_policy?: Prisma.NullableEnumPickPolicyFieldUpdateOperationsInput | $Enums.PickPolicy | null
  reminder_policy?: Prisma.NullableEnumReminderPolicyFieldUpdateOperationsInput | $Enums.ReminderPolicy | null
  scoring_type?: Prisma.NullableEnumScoringTypeFieldUpdateOperationsInput | $Enums.ScoringType | null
  share_code?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  superbowl_competition?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  status?: Prisma.EnumLeagueStatusFieldUpdateOperationsInput | $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsUpdateManyWithoutLeaguesNestedInput
  WeekWinners?: Prisma.WeekWinnersUpdateManyWithoutLeaguesNestedInput
  leaguemembers?: Prisma.leaguemembersUpdateManyWithoutLeaguesNestedInput
  leaguemessages?: Prisma.leaguemessagesUpdateManyWithoutLeaguesNestedInput
  prior_league?: Prisma.leaguesUpdateOneWithoutFuture_leaguesNestedInput
  future_leagues?: Prisma.leaguesUpdateManyWithoutPrior_leagueNestedInput
}

export type leaguesUncheckedUpdateWithoutPeopleInput = {
  league_id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  created_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  season?: Prisma.IntFieldUpdateOperationsInput | number
  late_policy?: Prisma.NullableEnumLatePolicyFieldUpdateOperationsInput | $Enums.LatePolicy | null
  pick_policy?: Prisma.NullableEnumPickPolicyFieldUpdateOperationsInput | $Enums.PickPolicy | null
  reminder_policy?: Prisma.NullableEnumReminderPolicyFieldUpdateOperationsInput | $Enums.ReminderPolicy | null
  scoring_type?: Prisma.NullableEnumScoringTypeFieldUpdateOperationsInput | $Enums.ScoringType | null
  share_code?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  superbowl_competition?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  prior_league_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumLeagueStatusFieldUpdateOperationsInput | $Enums.LeagueStatus
  EmailLogs?: Prisma.EmailLogsUncheckedUpdateManyWithoutLeaguesNestedInput
  WeekWinners?: Prisma.WeekWinnersUncheckedUpdateManyWithoutLeaguesNestedInput
  leaguemembers?: Prisma.leaguemembersUncheckedUpdateManyWithoutLeaguesNestedInput
  leaguemessages?: Prisma.leaguemessagesUncheckedUpdateManyWithoutLeaguesNestedInput
  future_leagues?: Prisma.leaguesUncheckedUpdateManyWithoutPrior_leagueNestedInput
}

export type leaguesUncheckedUpdateManyWithoutPeopleInput = {
  league_id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  created_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  season?: Prisma.IntFieldUpdateOperationsInput | number
  late_policy?: Prisma.NullableEnumLatePolicyFieldUpdateOperationsInput | $Enums.LatePolicy | null
  pick_policy?: Prisma.NullableEnumPickPolicyFieldUpdateOperationsInput | $Enums.PickPolicy | null
  reminder_policy?: Prisma.NullableEnumReminderPolicyFieldUpdateOperationsInput | $Enums.ReminderPolicy | null
  scoring_type?: Prisma.NullableEnumScoringTypeFieldUpdateOperationsInput | $Enums.ScoringType | null
  share_code?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  superbowl_competition?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  prior_league_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumLeagueStatusFieldUpdateOperationsInput | $Enums.LeagueStatus
}


/**
 * Count Type LeaguesCountOutputType
 */

export type LeaguesCountOutputType = {
  EmailLogs: number
  WeekWinners: number
  leaguemembers: number
  leaguemessages: number
  future_leagues: number
}

export type LeaguesCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  EmailLogs?: boolean | LeaguesCountOutputTypeCountEmailLogsArgs
  WeekWinners?: boolean | LeaguesCountOutputTypeCountWeekWinnersArgs
  leaguemembers?: boolean | LeaguesCountOutputTypeCountLeaguemembersArgs
  leaguemessages?: boolean | LeaguesCountOutputTypeCountLeaguemessagesArgs
  future_leagues?: boolean | LeaguesCountOutputTypeCountFuture_leaguesArgs
}

/**
 * LeaguesCountOutputType without action
 */
export type LeaguesCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the LeaguesCountOutputType
   */
  select?: Prisma.LeaguesCountOutputTypeSelect<ExtArgs> | null
}

/**
 * LeaguesCountOutputType without action
 */
export type LeaguesCountOutputTypeCountEmailLogsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.EmailLogsWhereInput
}

/**
 * LeaguesCountOutputType without action
 */
export type LeaguesCountOutputTypeCountWeekWinnersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.WeekWinnersWhereInput
}

/**
 * LeaguesCountOutputType without action
 */
export type LeaguesCountOutputTypeCountLeaguemembersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.leaguemembersWhereInput
}

/**
 * LeaguesCountOutputType without action
 */
export type LeaguesCountOutputTypeCountLeaguemessagesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.leaguemessagesWhereInput
}

/**
 * LeaguesCountOutputType without action
 */
export type LeaguesCountOutputTypeCountFuture_leaguesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.leaguesWhereInput
}


export type leaguesSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  league_id?: boolean
  created_by_user_id?: boolean
  name?: boolean
  created_time?: boolean
  season?: boolean
  late_policy?: boolean
  pick_policy?: boolean
  reminder_policy?: boolean
  scoring_type?: boolean
  share_code?: boolean
  superbowl_competition?: boolean
  prior_league_id?: boolean
  status?: boolean
  EmailLogs?: boolean | Prisma.leagues$EmailLogsArgs<ExtArgs>
  WeekWinners?: boolean | Prisma.leagues$WeekWinnersArgs<ExtArgs>
  leaguemembers?: boolean | Prisma.leagues$leaguemembersArgs<ExtArgs>
  leaguemessages?: boolean | Prisma.leagues$leaguemessagesArgs<ExtArgs>
  people?: boolean | Prisma.peopleDefaultArgs<ExtArgs>
  prior_league?: boolean | Prisma.leagues$prior_leagueArgs<ExtArgs>
  future_leagues?: boolean | Prisma.leagues$future_leaguesArgs<ExtArgs>
  _count?: boolean | Prisma.LeaguesCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["leagues"]>

export type leaguesSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  league_id?: boolean
  created_by_user_id?: boolean
  name?: boolean
  created_time?: boolean
  season?: boolean
  late_policy?: boolean
  pick_policy?: boolean
  reminder_policy?: boolean
  scoring_type?: boolean
  share_code?: boolean
  superbowl_competition?: boolean
  prior_league_id?: boolean
  status?: boolean
  people?: boolean | Prisma.peopleDefaultArgs<ExtArgs>
  prior_league?: boolean | Prisma.leagues$prior_leagueArgs<ExtArgs>
}, ExtArgs["result"]["leagues"]>

export type leaguesSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  league_id?: boolean
  created_by_user_id?: boolean
  name?: boolean
  created_time?: boolean
  season?: boolean
  late_policy?: boolean
  pick_policy?: boolean
  reminder_policy?: boolean
  scoring_type?: boolean
  share_code?: boolean
  superbowl_competition?: boolean
  prior_league_id?: boolean
  status?: boolean
  people?: boolean | Prisma.peopleDefaultArgs<ExtArgs>
  prior_league?: boolean | Prisma.leagues$prior_leagueArgs<ExtArgs>
}, ExtArgs["result"]["leagues"]>

export type leaguesSelectScalar = {
  league_id?: boolean
  created_by_user_id?: boolean
  name?: boolean
  created_time?: boolean
  season?: boolean
  late_policy?: boolean
  pick_policy?: boolean
  reminder_policy?: boolean
  scoring_type?: boolean
  share_code?: boolean
  superbowl_competition?: boolean
  prior_league_id?: boolean
  status?: boolean
}

export type leaguesOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"league_id" | "created_by_user_id" | "name" | "created_time" | "season" | "late_policy" | "pick_policy" | "reminder_policy" | "scoring_type" | "share_code" | "superbowl_competition" | "prior_league_id" | "status", ExtArgs["result"]["leagues"]>
export type leaguesInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  EmailLogs?: boolean | Prisma.leagues$EmailLogsArgs<ExtArgs>
  WeekWinners?: boolean | Prisma.leagues$WeekWinnersArgs<ExtArgs>
  leaguemembers?: boolean | Prisma.leagues$leaguemembersArgs<ExtArgs>
  leaguemessages?: boolean | Prisma.leagues$leaguemessagesArgs<ExtArgs>
  people?: boolean | Prisma.peopleDefaultArgs<ExtArgs>
  prior_league?: boolean | Prisma.leagues$prior_leagueArgs<ExtArgs>
  future_leagues?: boolean | Prisma.leagues$future_leaguesArgs<ExtArgs>
  _count?: boolean | Prisma.LeaguesCountOutputTypeDefaultArgs<ExtArgs>
}
export type leaguesIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  people?: boolean | Prisma.peopleDefaultArgs<ExtArgs>
  prior_league?: boolean | Prisma.leagues$prior_leagueArgs<ExtArgs>
}
export type leaguesIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  people?: boolean | Prisma.peopleDefaultArgs<ExtArgs>
  prior_league?: boolean | Prisma.leagues$prior_leagueArgs<ExtArgs>
}

export type $leaguesPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "leagues"
  objects: {
    EmailLogs: Prisma.$EmailLogsPayload<ExtArgs>[]
    WeekWinners: Prisma.$WeekWinnersPayload<ExtArgs>[]
    leaguemembers: Prisma.$leaguemembersPayload<ExtArgs>[]
    leaguemessages: Prisma.$leaguemessagesPayload<ExtArgs>[]
    people: Prisma.$peoplePayload<ExtArgs>
    prior_league: Prisma.$leaguesPayload<ExtArgs> | null
    future_leagues: Prisma.$leaguesPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    league_id: number
    created_by_user_id: number
    name: string
    created_time: Date
    season: number
    late_policy: $Enums.LatePolicy | null
    pick_policy: $Enums.PickPolicy | null
    reminder_policy: $Enums.ReminderPolicy | null
    scoring_type: $Enums.ScoringType | null
    share_code: string | null
    superbowl_competition: boolean | null
    prior_league_id: number | null
    status: $Enums.LeagueStatus
  }, ExtArgs["result"]["leagues"]>
  composites: {}
}

export type leaguesGetPayload<S extends boolean | null | undefined | leaguesDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$leaguesPayload, S>

export type leaguesCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<leaguesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: LeaguesCountAggregateInputType | true
  }

export interface leaguesDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['leagues'], meta: { name: 'leagues' } }
  /**
   * Find zero or one Leagues that matches the filter.
   * @param {leaguesFindUniqueArgs} args - Arguments to find a Leagues
   * @example
   * // Get one Leagues
   * const leagues = await prisma.leagues.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends leaguesFindUniqueArgs>(args: Prisma.SelectSubset<T, leaguesFindUniqueArgs<ExtArgs>>): Prisma.Prisma__leaguesClient<runtime.Types.Result.GetResult<Prisma.$leaguesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Leagues that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {leaguesFindUniqueOrThrowArgs} args - Arguments to find a Leagues
   * @example
   * // Get one Leagues
   * const leagues = await prisma.leagues.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends leaguesFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, leaguesFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__leaguesClient<runtime.Types.Result.GetResult<Prisma.$leaguesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Leagues that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {leaguesFindFirstArgs} args - Arguments to find a Leagues
   * @example
   * // Get one Leagues
   * const leagues = await prisma.leagues.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends leaguesFindFirstArgs>(args?: Prisma.SelectSubset<T, leaguesFindFirstArgs<ExtArgs>>): Prisma.Prisma__leaguesClient<runtime.Types.Result.GetResult<Prisma.$leaguesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Leagues that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {leaguesFindFirstOrThrowArgs} args - Arguments to find a Leagues
   * @example
   * // Get one Leagues
   * const leagues = await prisma.leagues.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends leaguesFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, leaguesFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__leaguesClient<runtime.Types.Result.GetResult<Prisma.$leaguesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Leagues that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {leaguesFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Leagues
   * const leagues = await prisma.leagues.findMany()
   * 
   * // Get first 10 Leagues
   * const leagues = await prisma.leagues.findMany({ take: 10 })
   * 
   * // Only select the `league_id`
   * const leaguesWithLeague_idOnly = await prisma.leagues.findMany({ select: { league_id: true } })
   * 
   */
  findMany<T extends leaguesFindManyArgs>(args?: Prisma.SelectSubset<T, leaguesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$leaguesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Leagues.
   * @param {leaguesCreateArgs} args - Arguments to create a Leagues.
   * @example
   * // Create one Leagues
   * const Leagues = await prisma.leagues.create({
   *   data: {
   *     // ... data to create a Leagues
   *   }
   * })
   * 
   */
  create<T extends leaguesCreateArgs>(args: Prisma.SelectSubset<T, leaguesCreateArgs<ExtArgs>>): Prisma.Prisma__leaguesClient<runtime.Types.Result.GetResult<Prisma.$leaguesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Leagues.
   * @param {leaguesCreateManyArgs} args - Arguments to create many Leagues.
   * @example
   * // Create many Leagues
   * const leagues = await prisma.leagues.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends leaguesCreateManyArgs>(args?: Prisma.SelectSubset<T, leaguesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Leagues and returns the data saved in the database.
   * @param {leaguesCreateManyAndReturnArgs} args - Arguments to create many Leagues.
   * @example
   * // Create many Leagues
   * const leagues = await prisma.leagues.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Leagues and only return the `league_id`
   * const leaguesWithLeague_idOnly = await prisma.leagues.createManyAndReturn({
   *   select: { league_id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends leaguesCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, leaguesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$leaguesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Leagues.
   * @param {leaguesDeleteArgs} args - Arguments to delete one Leagues.
   * @example
   * // Delete one Leagues
   * const Leagues = await prisma.leagues.delete({
   *   where: {
   *     // ... filter to delete one Leagues
   *   }
   * })
   * 
   */
  delete<T extends leaguesDeleteArgs>(args: Prisma.SelectSubset<T, leaguesDeleteArgs<ExtArgs>>): Prisma.Prisma__leaguesClient<runtime.Types.Result.GetResult<Prisma.$leaguesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Leagues.
   * @param {leaguesUpdateArgs} args - Arguments to update one Leagues.
   * @example
   * // Update one Leagues
   * const leagues = await prisma.leagues.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends leaguesUpdateArgs>(args: Prisma.SelectSubset<T, leaguesUpdateArgs<ExtArgs>>): Prisma.Prisma__leaguesClient<runtime.Types.Result.GetResult<Prisma.$leaguesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Leagues.
   * @param {leaguesDeleteManyArgs} args - Arguments to filter Leagues to delete.
   * @example
   * // Delete a few Leagues
   * const { count } = await prisma.leagues.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends leaguesDeleteManyArgs>(args?: Prisma.SelectSubset<T, leaguesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Leagues.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {leaguesUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Leagues
   * const leagues = await prisma.leagues.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends leaguesUpdateManyArgs>(args: Prisma.SelectSubset<T, leaguesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Leagues and returns the data updated in the database.
   * @param {leaguesUpdateManyAndReturnArgs} args - Arguments to update many Leagues.
   * @example
   * // Update many Leagues
   * const leagues = await prisma.leagues.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Leagues and only return the `league_id`
   * const leaguesWithLeague_idOnly = await prisma.leagues.updateManyAndReturn({
   *   select: { league_id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends leaguesUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, leaguesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$leaguesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Leagues.
   * @param {leaguesUpsertArgs} args - Arguments to update or create a Leagues.
   * @example
   * // Update or create a Leagues
   * const leagues = await prisma.leagues.upsert({
   *   create: {
   *     // ... data to create a Leagues
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Leagues we want to update
   *   }
   * })
   */
  upsert<T extends leaguesUpsertArgs>(args: Prisma.SelectSubset<T, leaguesUpsertArgs<ExtArgs>>): Prisma.Prisma__leaguesClient<runtime.Types.Result.GetResult<Prisma.$leaguesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Leagues.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {leaguesCountArgs} args - Arguments to filter Leagues to count.
   * @example
   * // Count the number of Leagues
   * const count = await prisma.leagues.count({
   *   where: {
   *     // ... the filter for the Leagues we want to count
   *   }
   * })
  **/
  count<T extends leaguesCountArgs>(
    args?: Prisma.Subset<T, leaguesCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], LeaguesCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Leagues.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LeaguesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends LeaguesAggregateArgs>(args: Prisma.Subset<T, LeaguesAggregateArgs>): Prisma.PrismaPromise<GetLeaguesAggregateType<T>>

  /**
   * Group by Leagues.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {leaguesGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends leaguesGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: leaguesGroupByArgs['orderBy'] }
      : { orderBy?: leaguesGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, leaguesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLeaguesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the leagues model
 */
readonly fields: leaguesFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for leagues.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__leaguesClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  EmailLogs<T extends Prisma.leagues$EmailLogsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.leagues$EmailLogsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EmailLogsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  WeekWinners<T extends Prisma.leagues$WeekWinnersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.leagues$WeekWinnersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WeekWinnersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  leaguemembers<T extends Prisma.leagues$leaguemembersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.leagues$leaguemembersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$leaguemembersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  leaguemessages<T extends Prisma.leagues$leaguemessagesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.leagues$leaguemessagesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$leaguemessagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  people<T extends Prisma.peopleDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.peopleDefaultArgs<ExtArgs>>): Prisma.Prisma__peopleClient<runtime.Types.Result.GetResult<Prisma.$peoplePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  prior_league<T extends Prisma.leagues$prior_leagueArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.leagues$prior_leagueArgs<ExtArgs>>): Prisma.Prisma__leaguesClient<runtime.Types.Result.GetResult<Prisma.$leaguesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  future_leagues<T extends Prisma.leagues$future_leaguesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.leagues$future_leaguesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$leaguesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the leagues model
 */
export interface leaguesFieldRefs {
  readonly league_id: Prisma.FieldRef<"leagues", 'Int'>
  readonly created_by_user_id: Prisma.FieldRef<"leagues", 'Int'>
  readonly name: Prisma.FieldRef<"leagues", 'String'>
  readonly created_time: Prisma.FieldRef<"leagues", 'DateTime'>
  readonly season: Prisma.FieldRef<"leagues", 'Int'>
  readonly late_policy: Prisma.FieldRef<"leagues", 'LatePolicy'>
  readonly pick_policy: Prisma.FieldRef<"leagues", 'PickPolicy'>
  readonly reminder_policy: Prisma.FieldRef<"leagues", 'ReminderPolicy'>
  readonly scoring_type: Prisma.FieldRef<"leagues", 'ScoringType'>
  readonly share_code: Prisma.FieldRef<"leagues", 'String'>
  readonly superbowl_competition: Prisma.FieldRef<"leagues", 'Boolean'>
  readonly prior_league_id: Prisma.FieldRef<"leagues", 'Int'>
  readonly status: Prisma.FieldRef<"leagues", 'LeagueStatus'>
}
    

// Custom InputTypes
/**
 * leagues findUnique
 */
export type leaguesFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the leagues
   */
  select?: Prisma.leaguesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the leagues
   */
  omit?: Prisma.leaguesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.leaguesInclude<ExtArgs> | null
  /**
   * Filter, which leagues to fetch.
   */
  where: Prisma.leaguesWhereUniqueInput
}

/**
 * leagues findUniqueOrThrow
 */
export type leaguesFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the leagues
   */
  select?: Prisma.leaguesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the leagues
   */
  omit?: Prisma.leaguesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.leaguesInclude<ExtArgs> | null
  /**
   * Filter, which leagues to fetch.
   */
  where: Prisma.leaguesWhereUniqueInput
}

/**
 * leagues findFirst
 */
export type leaguesFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the leagues
   */
  select?: Prisma.leaguesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the leagues
   */
  omit?: Prisma.leaguesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.leaguesInclude<ExtArgs> | null
  /**
   * Filter, which leagues to fetch.
   */
  where?: Prisma.leaguesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of leagues to fetch.
   */
  orderBy?: Prisma.leaguesOrderByWithRelationInput | Prisma.leaguesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for leagues.
   */
  cursor?: Prisma.leaguesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` leagues from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` leagues.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of leagues.
   */
  distinct?: Prisma.LeaguesScalarFieldEnum | Prisma.LeaguesScalarFieldEnum[]
}

/**
 * leagues findFirstOrThrow
 */
export type leaguesFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the leagues
   */
  select?: Prisma.leaguesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the leagues
   */
  omit?: Prisma.leaguesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.leaguesInclude<ExtArgs> | null
  /**
   * Filter, which leagues to fetch.
   */
  where?: Prisma.leaguesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of leagues to fetch.
   */
  orderBy?: Prisma.leaguesOrderByWithRelationInput | Prisma.leaguesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for leagues.
   */
  cursor?: Prisma.leaguesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` leagues from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` leagues.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of leagues.
   */
  distinct?: Prisma.LeaguesScalarFieldEnum | Prisma.LeaguesScalarFieldEnum[]
}

/**
 * leagues findMany
 */
export type leaguesFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the leagues
   */
  select?: Prisma.leaguesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the leagues
   */
  omit?: Prisma.leaguesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.leaguesInclude<ExtArgs> | null
  /**
   * Filter, which leagues to fetch.
   */
  where?: Prisma.leaguesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of leagues to fetch.
   */
  orderBy?: Prisma.leaguesOrderByWithRelationInput | Prisma.leaguesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing leagues.
   */
  cursor?: Prisma.leaguesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` leagues from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` leagues.
   */
  skip?: number
  distinct?: Prisma.LeaguesScalarFieldEnum | Prisma.LeaguesScalarFieldEnum[]
}

/**
 * leagues create
 */
export type leaguesCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the leagues
   */
  select?: Prisma.leaguesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the leagues
   */
  omit?: Prisma.leaguesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.leaguesInclude<ExtArgs> | null
  /**
   * The data needed to create a leagues.
   */
  data: Prisma.XOR<Prisma.leaguesCreateInput, Prisma.leaguesUncheckedCreateInput>
}

/**
 * leagues createMany
 */
export type leaguesCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many leagues.
   */
  data: Prisma.leaguesCreateManyInput | Prisma.leaguesCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * leagues createManyAndReturn
 */
export type leaguesCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the leagues
   */
  select?: Prisma.leaguesSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the leagues
   */
  omit?: Prisma.leaguesOmit<ExtArgs> | null
  /**
   * The data used to create many leagues.
   */
  data: Prisma.leaguesCreateManyInput | Prisma.leaguesCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.leaguesIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * leagues update
 */
export type leaguesUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the leagues
   */
  select?: Prisma.leaguesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the leagues
   */
  omit?: Prisma.leaguesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.leaguesInclude<ExtArgs> | null
  /**
   * The data needed to update a leagues.
   */
  data: Prisma.XOR<Prisma.leaguesUpdateInput, Prisma.leaguesUncheckedUpdateInput>
  /**
   * Choose, which leagues to update.
   */
  where: Prisma.leaguesWhereUniqueInput
}

/**
 * leagues updateMany
 */
export type leaguesUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update leagues.
   */
  data: Prisma.XOR<Prisma.leaguesUpdateManyMutationInput, Prisma.leaguesUncheckedUpdateManyInput>
  /**
   * Filter which leagues to update
   */
  where?: Prisma.leaguesWhereInput
  /**
   * Limit how many leagues to update.
   */
  limit?: number
}

/**
 * leagues updateManyAndReturn
 */
export type leaguesUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the leagues
   */
  select?: Prisma.leaguesSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the leagues
   */
  omit?: Prisma.leaguesOmit<ExtArgs> | null
  /**
   * The data used to update leagues.
   */
  data: Prisma.XOR<Prisma.leaguesUpdateManyMutationInput, Prisma.leaguesUncheckedUpdateManyInput>
  /**
   * Filter which leagues to update
   */
  where?: Prisma.leaguesWhereInput
  /**
   * Limit how many leagues to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.leaguesIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * leagues upsert
 */
export type leaguesUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the leagues
   */
  select?: Prisma.leaguesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the leagues
   */
  omit?: Prisma.leaguesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.leaguesInclude<ExtArgs> | null
  /**
   * The filter to search for the leagues to update in case it exists.
   */
  where: Prisma.leaguesWhereUniqueInput
  /**
   * In case the leagues found by the `where` argument doesn't exist, create a new leagues with this data.
   */
  create: Prisma.XOR<Prisma.leaguesCreateInput, Prisma.leaguesUncheckedCreateInput>
  /**
   * In case the leagues was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.leaguesUpdateInput, Prisma.leaguesUncheckedUpdateInput>
}

/**
 * leagues delete
 */
export type leaguesDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the leagues
   */
  select?: Prisma.leaguesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the leagues
   */
  omit?: Prisma.leaguesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.leaguesInclude<ExtArgs> | null
  /**
   * Filter which leagues to delete.
   */
  where: Prisma.leaguesWhereUniqueInput
}

/**
 * leagues deleteMany
 */
export type leaguesDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which leagues to delete
   */
  where?: Prisma.leaguesWhereInput
  /**
   * Limit how many leagues to delete.
   */
  limit?: number
}

/**
 * leagues.EmailLogs
 */
export type leagues$EmailLogsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EmailLogs
   */
  select?: Prisma.EmailLogsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EmailLogs
   */
  omit?: Prisma.EmailLogsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EmailLogsInclude<ExtArgs> | null
  where?: Prisma.EmailLogsWhereInput
  orderBy?: Prisma.EmailLogsOrderByWithRelationInput | Prisma.EmailLogsOrderByWithRelationInput[]
  cursor?: Prisma.EmailLogsWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.EmailLogsScalarFieldEnum | Prisma.EmailLogsScalarFieldEnum[]
}

/**
 * leagues.WeekWinners
 */
export type leagues$WeekWinnersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WeekWinners
   */
  select?: Prisma.WeekWinnersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WeekWinners
   */
  omit?: Prisma.WeekWinnersOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WeekWinnersInclude<ExtArgs> | null
  where?: Prisma.WeekWinnersWhereInput
  orderBy?: Prisma.WeekWinnersOrderByWithRelationInput | Prisma.WeekWinnersOrderByWithRelationInput[]
  cursor?: Prisma.WeekWinnersWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.WeekWinnersScalarFieldEnum | Prisma.WeekWinnersScalarFieldEnum[]
}

/**
 * leagues.leaguemembers
 */
export type leagues$leaguemembersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the leaguemembers
   */
  select?: Prisma.leaguemembersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the leaguemembers
   */
  omit?: Prisma.leaguemembersOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.leaguemembersInclude<ExtArgs> | null
  where?: Prisma.leaguemembersWhereInput
  orderBy?: Prisma.leaguemembersOrderByWithRelationInput | Prisma.leaguemembersOrderByWithRelationInput[]
  cursor?: Prisma.leaguemembersWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.LeaguemembersScalarFieldEnum | Prisma.LeaguemembersScalarFieldEnum[]
}

/**
 * leagues.leaguemessages
 */
export type leagues$leaguemessagesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the leaguemessages
   */
  select?: Prisma.leaguemessagesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the leaguemessages
   */
  omit?: Prisma.leaguemessagesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.leaguemessagesInclude<ExtArgs> | null
  where?: Prisma.leaguemessagesWhereInput
  orderBy?: Prisma.leaguemessagesOrderByWithRelationInput | Prisma.leaguemessagesOrderByWithRelationInput[]
  cursor?: Prisma.leaguemessagesWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.LeaguemessagesScalarFieldEnum | Prisma.LeaguemessagesScalarFieldEnum[]
}

/**
 * leagues.prior_league
 */
export type leagues$prior_leagueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the leagues
   */
  select?: Prisma.leaguesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the leagues
   */
  omit?: Prisma.leaguesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.leaguesInclude<ExtArgs> | null
  where?: Prisma.leaguesWhereInput
}

/**
 * leagues.future_leagues
 */
export type leagues$future_leaguesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the leagues
   */
  select?: Prisma.leaguesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the leagues
   */
  omit?: Prisma.leaguesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.leaguesInclude<ExtArgs> | null
  where?: Prisma.leaguesWhereInput
  orderBy?: Prisma.leaguesOrderByWithRelationInput | Prisma.leaguesOrderByWithRelationInput[]
  cursor?: Prisma.leaguesWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.LeaguesScalarFieldEnum | Prisma.LeaguesScalarFieldEnum[]
}

/**
 * leagues without action
 */
export type leaguesDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the leagues
   */
  select?: Prisma.leaguesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the leagues
   */
  omit?: Prisma.leaguesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.leaguesInclude<ExtArgs> | null
}
