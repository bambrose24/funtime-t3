
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `teams` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model teams
 * 
 */
export type teamsModel = runtime.Types.Result.DefaultSelection<Prisma.$teamsPayload>

export type AggregateTeams = {
  _count: TeamsCountAggregateOutputType | null
  _avg: TeamsAvgAggregateOutputType | null
  _sum: TeamsSumAggregateOutputType | null
  _min: TeamsMinAggregateOutputType | null
  _max: TeamsMaxAggregateOutputType | null
}

export type TeamsAvgAggregateOutputType = {
  teamid: number | null
}

export type TeamsSumAggregateOutputType = {
  teamid: number | null
}

export type TeamsMinAggregateOutputType = {
  teamid: number | null
  abbrev: string | null
  loc: string | null
  name: string | null
  conference: string | null
  primary_color: string | null
  secondary_color: string | null
  tertiary_color: string | null
}

export type TeamsMaxAggregateOutputType = {
  teamid: number | null
  abbrev: string | null
  loc: string | null
  name: string | null
  conference: string | null
  primary_color: string | null
  secondary_color: string | null
  tertiary_color: string | null
}

export type TeamsCountAggregateOutputType = {
  teamid: number
  abbrev: number
  loc: number
  name: number
  conference: number
  primary_color: number
  secondary_color: number
  tertiary_color: number
  _all: number
}


export type TeamsAvgAggregateInputType = {
  teamid?: true
}

export type TeamsSumAggregateInputType = {
  teamid?: true
}

export type TeamsMinAggregateInputType = {
  teamid?: true
  abbrev?: true
  loc?: true
  name?: true
  conference?: true
  primary_color?: true
  secondary_color?: true
  tertiary_color?: true
}

export type TeamsMaxAggregateInputType = {
  teamid?: true
  abbrev?: true
  loc?: true
  name?: true
  conference?: true
  primary_color?: true
  secondary_color?: true
  tertiary_color?: true
}

export type TeamsCountAggregateInputType = {
  teamid?: true
  abbrev?: true
  loc?: true
  name?: true
  conference?: true
  primary_color?: true
  secondary_color?: true
  tertiary_color?: true
  _all?: true
}

export type TeamsAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which teams to aggregate.
   */
  where?: Prisma.teamsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of teams to fetch.
   */
  orderBy?: Prisma.teamsOrderByWithRelationInput | Prisma.teamsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.teamsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` teams from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` teams.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned teams
  **/
  _count?: true | TeamsCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: TeamsAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: TeamsSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: TeamsMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: TeamsMaxAggregateInputType
}

export type GetTeamsAggregateType<T extends TeamsAggregateArgs> = {
      [P in keyof T & keyof AggregateTeams]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateTeams[P]>
    : Prisma.GetScalarType<T[P], AggregateTeams[P]>
}




export type teamsGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.teamsWhereInput
  orderBy?: Prisma.teamsOrderByWithAggregationInput | Prisma.teamsOrderByWithAggregationInput[]
  by: Prisma.TeamsScalarFieldEnum[] | Prisma.TeamsScalarFieldEnum
  having?: Prisma.teamsScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: TeamsCountAggregateInputType | true
  _avg?: TeamsAvgAggregateInputType
  _sum?: TeamsSumAggregateInputType
  _min?: TeamsMinAggregateInputType
  _max?: TeamsMaxAggregateInputType
}

export type TeamsGroupByOutputType = {
  teamid: number
  abbrev: string | null
  loc: string
  name: string
  conference: string | null
  primary_color: string | null
  secondary_color: string | null
  tertiary_color: string | null
  _count: TeamsCountAggregateOutputType | null
  _avg: TeamsAvgAggregateOutputType | null
  _sum: TeamsSumAggregateOutputType | null
  _min: TeamsMinAggregateOutputType | null
  _max: TeamsMaxAggregateOutputType | null
}

type GetTeamsGroupByPayload<T extends teamsGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<TeamsGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof TeamsGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], TeamsGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], TeamsGroupByOutputType[P]>
      }
    >
  > 



export type teamsWhereInput = {
  AND?: Prisma.teamsWhereInput | Prisma.teamsWhereInput[]
  OR?: Prisma.teamsWhereInput[]
  NOT?: Prisma.teamsWhereInput | Prisma.teamsWhereInput[]
  teamid?: Prisma.IntFilter<"teams"> | number
  abbrev?: Prisma.StringNullableFilter<"teams"> | string | null
  loc?: Prisma.StringFilter<"teams"> | string
  name?: Prisma.StringFilter<"teams"> | string
  conference?: Prisma.StringNullableFilter<"teams"> | string | null
  primary_color?: Prisma.StringNullableFilter<"teams"> | string | null
  secondary_color?: Prisma.StringNullableFilter<"teams"> | string | null
  tertiary_color?: Prisma.StringNullableFilter<"teams"> | string | null
  games_games_homeToteams?: Prisma.GamesListRelationFilter
  games_games_awayToteams?: Prisma.GamesListRelationFilter
  picks?: Prisma.PicksListRelationFilter
  superbowl_superbowl_loserToteams?: Prisma.SuperbowlListRelationFilter
  superbowl_superbowl_winnerToteams?: Prisma.SuperbowlListRelationFilter
}

export type teamsOrderByWithRelationInput = {
  teamid?: Prisma.SortOrder
  abbrev?: Prisma.SortOrderInput | Prisma.SortOrder
  loc?: Prisma.SortOrder
  name?: Prisma.SortOrder
  conference?: Prisma.SortOrderInput | Prisma.SortOrder
  primary_color?: Prisma.SortOrderInput | Prisma.SortOrder
  secondary_color?: Prisma.SortOrderInput | Prisma.SortOrder
  tertiary_color?: Prisma.SortOrderInput | Prisma.SortOrder
  games_games_homeToteams?: Prisma.gamesOrderByRelationAggregateInput
  games_games_awayToteams?: Prisma.gamesOrderByRelationAggregateInput
  picks?: Prisma.picksOrderByRelationAggregateInput
  superbowl_superbowl_loserToteams?: Prisma.superbowlOrderByRelationAggregateInput
  superbowl_superbowl_winnerToteams?: Prisma.superbowlOrderByRelationAggregateInput
}

export type teamsWhereUniqueInput = Prisma.AtLeast<{
  teamid?: number
  AND?: Prisma.teamsWhereInput | Prisma.teamsWhereInput[]
  OR?: Prisma.teamsWhereInput[]
  NOT?: Prisma.teamsWhereInput | Prisma.teamsWhereInput[]
  abbrev?: Prisma.StringNullableFilter<"teams"> | string | null
  loc?: Prisma.StringFilter<"teams"> | string
  name?: Prisma.StringFilter<"teams"> | string
  conference?: Prisma.StringNullableFilter<"teams"> | string | null
  primary_color?: Prisma.StringNullableFilter<"teams"> | string | null
  secondary_color?: Prisma.StringNullableFilter<"teams"> | string | null
  tertiary_color?: Prisma.StringNullableFilter<"teams"> | string | null
  games_games_homeToteams?: Prisma.GamesListRelationFilter
  games_games_awayToteams?: Prisma.GamesListRelationFilter
  picks?: Prisma.PicksListRelationFilter
  superbowl_superbowl_loserToteams?: Prisma.SuperbowlListRelationFilter
  superbowl_superbowl_winnerToteams?: Prisma.SuperbowlListRelationFilter
}, "teamid">

export type teamsOrderByWithAggregationInput = {
  teamid?: Prisma.SortOrder
  abbrev?: Prisma.SortOrderInput | Prisma.SortOrder
  loc?: Prisma.SortOrder
  name?: Prisma.SortOrder
  conference?: Prisma.SortOrderInput | Prisma.SortOrder
  primary_color?: Prisma.SortOrderInput | Prisma.SortOrder
  secondary_color?: Prisma.SortOrderInput | Prisma.SortOrder
  tertiary_color?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.teamsCountOrderByAggregateInput
  _avg?: Prisma.teamsAvgOrderByAggregateInput
  _max?: Prisma.teamsMaxOrderByAggregateInput
  _min?: Prisma.teamsMinOrderByAggregateInput
  _sum?: Prisma.teamsSumOrderByAggregateInput
}

export type teamsScalarWhereWithAggregatesInput = {
  AND?: Prisma.teamsScalarWhereWithAggregatesInput | Prisma.teamsScalarWhereWithAggregatesInput[]
  OR?: Prisma.teamsScalarWhereWithAggregatesInput[]
  NOT?: Prisma.teamsScalarWhereWithAggregatesInput | Prisma.teamsScalarWhereWithAggregatesInput[]
  teamid?: Prisma.IntWithAggregatesFilter<"teams"> | number
  abbrev?: Prisma.StringNullableWithAggregatesFilter<"teams"> | string | null
  loc?: Prisma.StringWithAggregatesFilter<"teams"> | string
  name?: Prisma.StringWithAggregatesFilter<"teams"> | string
  conference?: Prisma.StringNullableWithAggregatesFilter<"teams"> | string | null
  primary_color?: Prisma.StringNullableWithAggregatesFilter<"teams"> | string | null
  secondary_color?: Prisma.StringNullableWithAggregatesFilter<"teams"> | string | null
  tertiary_color?: Prisma.StringNullableWithAggregatesFilter<"teams"> | string | null
}

export type teamsCreateInput = {
  abbrev?: string | null
  loc: string
  name: string
  conference?: string | null
  primary_color?: string | null
  secondary_color?: string | null
  tertiary_color?: string | null
  games_games_homeToteams?: Prisma.gamesCreateNestedManyWithoutTeams_games_homeToteamsInput
  games_games_awayToteams?: Prisma.gamesCreateNestedManyWithoutTeams_games_awayToteamsInput
  picks?: Prisma.picksCreateNestedManyWithoutTeamsInput
  superbowl_superbowl_loserToteams?: Prisma.superbowlCreateNestedManyWithoutTeams_superbowl_loserToteamsInput
  superbowl_superbowl_winnerToteams?: Prisma.superbowlCreateNestedManyWithoutTeams_superbowl_winnerToteamsInput
}

export type teamsUncheckedCreateInput = {
  teamid?: number
  abbrev?: string | null
  loc: string
  name: string
  conference?: string | null
  primary_color?: string | null
  secondary_color?: string | null
  tertiary_color?: string | null
  games_games_homeToteams?: Prisma.gamesUncheckedCreateNestedManyWithoutTeams_games_homeToteamsInput
  games_games_awayToteams?: Prisma.gamesUncheckedCreateNestedManyWithoutTeams_games_awayToteamsInput
  picks?: Prisma.picksUncheckedCreateNestedManyWithoutTeamsInput
  superbowl_superbowl_loserToteams?: Prisma.superbowlUncheckedCreateNestedManyWithoutTeams_superbowl_loserToteamsInput
  superbowl_superbowl_winnerToteams?: Prisma.superbowlUncheckedCreateNestedManyWithoutTeams_superbowl_winnerToteamsInput
}

export type teamsUpdateInput = {
  abbrev?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  loc?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  conference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  primary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  secondary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tertiary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  games_games_homeToteams?: Prisma.gamesUpdateManyWithoutTeams_games_homeToteamsNestedInput
  games_games_awayToteams?: Prisma.gamesUpdateManyWithoutTeams_games_awayToteamsNestedInput
  picks?: Prisma.picksUpdateManyWithoutTeamsNestedInput
  superbowl_superbowl_loserToteams?: Prisma.superbowlUpdateManyWithoutTeams_superbowl_loserToteamsNestedInput
  superbowl_superbowl_winnerToteams?: Prisma.superbowlUpdateManyWithoutTeams_superbowl_winnerToteamsNestedInput
}

export type teamsUncheckedUpdateInput = {
  teamid?: Prisma.IntFieldUpdateOperationsInput | number
  abbrev?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  loc?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  conference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  primary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  secondary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tertiary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  games_games_homeToteams?: Prisma.gamesUncheckedUpdateManyWithoutTeams_games_homeToteamsNestedInput
  games_games_awayToteams?: Prisma.gamesUncheckedUpdateManyWithoutTeams_games_awayToteamsNestedInput
  picks?: Prisma.picksUncheckedUpdateManyWithoutTeamsNestedInput
  superbowl_superbowl_loserToteams?: Prisma.superbowlUncheckedUpdateManyWithoutTeams_superbowl_loserToteamsNestedInput
  superbowl_superbowl_winnerToteams?: Prisma.superbowlUncheckedUpdateManyWithoutTeams_superbowl_winnerToteamsNestedInput
}

export type teamsCreateManyInput = {
  teamid?: number
  abbrev?: string | null
  loc: string
  name: string
  conference?: string | null
  primary_color?: string | null
  secondary_color?: string | null
  tertiary_color?: string | null
}

export type teamsUpdateManyMutationInput = {
  abbrev?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  loc?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  conference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  primary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  secondary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tertiary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type teamsUncheckedUpdateManyInput = {
  teamid?: Prisma.IntFieldUpdateOperationsInput | number
  abbrev?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  loc?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  conference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  primary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  secondary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tertiary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type TeamsScalarRelationFilter = {
  is?: Prisma.teamsWhereInput
  isNot?: Prisma.teamsWhereInput
}

export type TeamsNullableScalarRelationFilter = {
  is?: Prisma.teamsWhereInput | null
  isNot?: Prisma.teamsWhereInput | null
}

export type teamsCountOrderByAggregateInput = {
  teamid?: Prisma.SortOrder
  abbrev?: Prisma.SortOrder
  loc?: Prisma.SortOrder
  name?: Prisma.SortOrder
  conference?: Prisma.SortOrder
  primary_color?: Prisma.SortOrder
  secondary_color?: Prisma.SortOrder
  tertiary_color?: Prisma.SortOrder
}

export type teamsAvgOrderByAggregateInput = {
  teamid?: Prisma.SortOrder
}

export type teamsMaxOrderByAggregateInput = {
  teamid?: Prisma.SortOrder
  abbrev?: Prisma.SortOrder
  loc?: Prisma.SortOrder
  name?: Prisma.SortOrder
  conference?: Prisma.SortOrder
  primary_color?: Prisma.SortOrder
  secondary_color?: Prisma.SortOrder
  tertiary_color?: Prisma.SortOrder
}

export type teamsMinOrderByAggregateInput = {
  teamid?: Prisma.SortOrder
  abbrev?: Prisma.SortOrder
  loc?: Prisma.SortOrder
  name?: Prisma.SortOrder
  conference?: Prisma.SortOrder
  primary_color?: Prisma.SortOrder
  secondary_color?: Prisma.SortOrder
  tertiary_color?: Prisma.SortOrder
}

export type teamsSumOrderByAggregateInput = {
  teamid?: Prisma.SortOrder
}

export type teamsCreateNestedOneWithoutGames_games_homeToteamsInput = {
  create?: Prisma.XOR<Prisma.teamsCreateWithoutGames_games_homeToteamsInput, Prisma.teamsUncheckedCreateWithoutGames_games_homeToteamsInput>
  connectOrCreate?: Prisma.teamsCreateOrConnectWithoutGames_games_homeToteamsInput
  connect?: Prisma.teamsWhereUniqueInput
}

export type teamsCreateNestedOneWithoutGames_games_awayToteamsInput = {
  create?: Prisma.XOR<Prisma.teamsCreateWithoutGames_games_awayToteamsInput, Prisma.teamsUncheckedCreateWithoutGames_games_awayToteamsInput>
  connectOrCreate?: Prisma.teamsCreateOrConnectWithoutGames_games_awayToteamsInput
  connect?: Prisma.teamsWhereUniqueInput
}

export type teamsUpdateOneRequiredWithoutGames_games_homeToteamsNestedInput = {
  create?: Prisma.XOR<Prisma.teamsCreateWithoutGames_games_homeToteamsInput, Prisma.teamsUncheckedCreateWithoutGames_games_homeToteamsInput>
  connectOrCreate?: Prisma.teamsCreateOrConnectWithoutGames_games_homeToteamsInput
  upsert?: Prisma.teamsUpsertWithoutGames_games_homeToteamsInput
  connect?: Prisma.teamsWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.teamsUpdateToOneWithWhereWithoutGames_games_homeToteamsInput, Prisma.teamsUpdateWithoutGames_games_homeToteamsInput>, Prisma.teamsUncheckedUpdateWithoutGames_games_homeToteamsInput>
}

export type teamsUpdateOneRequiredWithoutGames_games_awayToteamsNestedInput = {
  create?: Prisma.XOR<Prisma.teamsCreateWithoutGames_games_awayToteamsInput, Prisma.teamsUncheckedCreateWithoutGames_games_awayToteamsInput>
  connectOrCreate?: Prisma.teamsCreateOrConnectWithoutGames_games_awayToteamsInput
  upsert?: Prisma.teamsUpsertWithoutGames_games_awayToteamsInput
  connect?: Prisma.teamsWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.teamsUpdateToOneWithWhereWithoutGames_games_awayToteamsInput, Prisma.teamsUpdateWithoutGames_games_awayToteamsInput>, Prisma.teamsUncheckedUpdateWithoutGames_games_awayToteamsInput>
}

export type teamsCreateNestedOneWithoutPicksInput = {
  create?: Prisma.XOR<Prisma.teamsCreateWithoutPicksInput, Prisma.teamsUncheckedCreateWithoutPicksInput>
  connectOrCreate?: Prisma.teamsCreateOrConnectWithoutPicksInput
  connect?: Prisma.teamsWhereUniqueInput
}

export type teamsUpdateOneWithoutPicksNestedInput = {
  create?: Prisma.XOR<Prisma.teamsCreateWithoutPicksInput, Prisma.teamsUncheckedCreateWithoutPicksInput>
  connectOrCreate?: Prisma.teamsCreateOrConnectWithoutPicksInput
  upsert?: Prisma.teamsUpsertWithoutPicksInput
  disconnect?: Prisma.teamsWhereInput | boolean
  delete?: Prisma.teamsWhereInput | boolean
  connect?: Prisma.teamsWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.teamsUpdateToOneWithWhereWithoutPicksInput, Prisma.teamsUpdateWithoutPicksInput>, Prisma.teamsUncheckedUpdateWithoutPicksInput>
}

export type teamsCreateNestedOneWithoutSuperbowl_superbowl_loserToteamsInput = {
  create?: Prisma.XOR<Prisma.teamsCreateWithoutSuperbowl_superbowl_loserToteamsInput, Prisma.teamsUncheckedCreateWithoutSuperbowl_superbowl_loserToteamsInput>
  connectOrCreate?: Prisma.teamsCreateOrConnectWithoutSuperbowl_superbowl_loserToteamsInput
  connect?: Prisma.teamsWhereUniqueInput
}

export type teamsCreateNestedOneWithoutSuperbowl_superbowl_winnerToteamsInput = {
  create?: Prisma.XOR<Prisma.teamsCreateWithoutSuperbowl_superbowl_winnerToteamsInput, Prisma.teamsUncheckedCreateWithoutSuperbowl_superbowl_winnerToteamsInput>
  connectOrCreate?: Prisma.teamsCreateOrConnectWithoutSuperbowl_superbowl_winnerToteamsInput
  connect?: Prisma.teamsWhereUniqueInput
}

export type teamsUpdateOneRequiredWithoutSuperbowl_superbowl_loserToteamsNestedInput = {
  create?: Prisma.XOR<Prisma.teamsCreateWithoutSuperbowl_superbowl_loserToteamsInput, Prisma.teamsUncheckedCreateWithoutSuperbowl_superbowl_loserToteamsInput>
  connectOrCreate?: Prisma.teamsCreateOrConnectWithoutSuperbowl_superbowl_loserToteamsInput
  upsert?: Prisma.teamsUpsertWithoutSuperbowl_superbowl_loserToteamsInput
  connect?: Prisma.teamsWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.teamsUpdateToOneWithWhereWithoutSuperbowl_superbowl_loserToteamsInput, Prisma.teamsUpdateWithoutSuperbowl_superbowl_loserToteamsInput>, Prisma.teamsUncheckedUpdateWithoutSuperbowl_superbowl_loserToteamsInput>
}

export type teamsUpdateOneRequiredWithoutSuperbowl_superbowl_winnerToteamsNestedInput = {
  create?: Prisma.XOR<Prisma.teamsCreateWithoutSuperbowl_superbowl_winnerToteamsInput, Prisma.teamsUncheckedCreateWithoutSuperbowl_superbowl_winnerToteamsInput>
  connectOrCreate?: Prisma.teamsCreateOrConnectWithoutSuperbowl_superbowl_winnerToteamsInput
  upsert?: Prisma.teamsUpsertWithoutSuperbowl_superbowl_winnerToteamsInput
  connect?: Prisma.teamsWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.teamsUpdateToOneWithWhereWithoutSuperbowl_superbowl_winnerToteamsInput, Prisma.teamsUpdateWithoutSuperbowl_superbowl_winnerToteamsInput>, Prisma.teamsUncheckedUpdateWithoutSuperbowl_superbowl_winnerToteamsInput>
}

export type teamsCreateWithoutGames_games_homeToteamsInput = {
  abbrev?: string | null
  loc: string
  name: string
  conference?: string | null
  primary_color?: string | null
  secondary_color?: string | null
  tertiary_color?: string | null
  games_games_awayToteams?: Prisma.gamesCreateNestedManyWithoutTeams_games_awayToteamsInput
  picks?: Prisma.picksCreateNestedManyWithoutTeamsInput
  superbowl_superbowl_loserToteams?: Prisma.superbowlCreateNestedManyWithoutTeams_superbowl_loserToteamsInput
  superbowl_superbowl_winnerToteams?: Prisma.superbowlCreateNestedManyWithoutTeams_superbowl_winnerToteamsInput
}

export type teamsUncheckedCreateWithoutGames_games_homeToteamsInput = {
  teamid?: number
  abbrev?: string | null
  loc: string
  name: string
  conference?: string | null
  primary_color?: string | null
  secondary_color?: string | null
  tertiary_color?: string | null
  games_games_awayToteams?: Prisma.gamesUncheckedCreateNestedManyWithoutTeams_games_awayToteamsInput
  picks?: Prisma.picksUncheckedCreateNestedManyWithoutTeamsInput
  superbowl_superbowl_loserToteams?: Prisma.superbowlUncheckedCreateNestedManyWithoutTeams_superbowl_loserToteamsInput
  superbowl_superbowl_winnerToteams?: Prisma.superbowlUncheckedCreateNestedManyWithoutTeams_superbowl_winnerToteamsInput
}

export type teamsCreateOrConnectWithoutGames_games_homeToteamsInput = {
  where: Prisma.teamsWhereUniqueInput
  create: Prisma.XOR<Prisma.teamsCreateWithoutGames_games_homeToteamsInput, Prisma.teamsUncheckedCreateWithoutGames_games_homeToteamsInput>
}

export type teamsCreateWithoutGames_games_awayToteamsInput = {
  abbrev?: string | null
  loc: string
  name: string
  conference?: string | null
  primary_color?: string | null
  secondary_color?: string | null
  tertiary_color?: string | null
  games_games_homeToteams?: Prisma.gamesCreateNestedManyWithoutTeams_games_homeToteamsInput
  picks?: Prisma.picksCreateNestedManyWithoutTeamsInput
  superbowl_superbowl_loserToteams?: Prisma.superbowlCreateNestedManyWithoutTeams_superbowl_loserToteamsInput
  superbowl_superbowl_winnerToteams?: Prisma.superbowlCreateNestedManyWithoutTeams_superbowl_winnerToteamsInput
}

export type teamsUncheckedCreateWithoutGames_games_awayToteamsInput = {
  teamid?: number
  abbrev?: string | null
  loc: string
  name: string
  conference?: string | null
  primary_color?: string | null
  secondary_color?: string | null
  tertiary_color?: string | null
  games_games_homeToteams?: Prisma.gamesUncheckedCreateNestedManyWithoutTeams_games_homeToteamsInput
  picks?: Prisma.picksUncheckedCreateNestedManyWithoutTeamsInput
  superbowl_superbowl_loserToteams?: Prisma.superbowlUncheckedCreateNestedManyWithoutTeams_superbowl_loserToteamsInput
  superbowl_superbowl_winnerToteams?: Prisma.superbowlUncheckedCreateNestedManyWithoutTeams_superbowl_winnerToteamsInput
}

export type teamsCreateOrConnectWithoutGames_games_awayToteamsInput = {
  where: Prisma.teamsWhereUniqueInput
  create: Prisma.XOR<Prisma.teamsCreateWithoutGames_games_awayToteamsInput, Prisma.teamsUncheckedCreateWithoutGames_games_awayToteamsInput>
}

export type teamsUpsertWithoutGames_games_homeToteamsInput = {
  update: Prisma.XOR<Prisma.teamsUpdateWithoutGames_games_homeToteamsInput, Prisma.teamsUncheckedUpdateWithoutGames_games_homeToteamsInput>
  create: Prisma.XOR<Prisma.teamsCreateWithoutGames_games_homeToteamsInput, Prisma.teamsUncheckedCreateWithoutGames_games_homeToteamsInput>
  where?: Prisma.teamsWhereInput
}

export type teamsUpdateToOneWithWhereWithoutGames_games_homeToteamsInput = {
  where?: Prisma.teamsWhereInput
  data: Prisma.XOR<Prisma.teamsUpdateWithoutGames_games_homeToteamsInput, Prisma.teamsUncheckedUpdateWithoutGames_games_homeToteamsInput>
}

export type teamsUpdateWithoutGames_games_homeToteamsInput = {
  abbrev?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  loc?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  conference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  primary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  secondary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tertiary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  games_games_awayToteams?: Prisma.gamesUpdateManyWithoutTeams_games_awayToteamsNestedInput
  picks?: Prisma.picksUpdateManyWithoutTeamsNestedInput
  superbowl_superbowl_loserToteams?: Prisma.superbowlUpdateManyWithoutTeams_superbowl_loserToteamsNestedInput
  superbowl_superbowl_winnerToteams?: Prisma.superbowlUpdateManyWithoutTeams_superbowl_winnerToteamsNestedInput
}

export type teamsUncheckedUpdateWithoutGames_games_homeToteamsInput = {
  teamid?: Prisma.IntFieldUpdateOperationsInput | number
  abbrev?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  loc?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  conference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  primary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  secondary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tertiary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  games_games_awayToteams?: Prisma.gamesUncheckedUpdateManyWithoutTeams_games_awayToteamsNestedInput
  picks?: Prisma.picksUncheckedUpdateManyWithoutTeamsNestedInput
  superbowl_superbowl_loserToteams?: Prisma.superbowlUncheckedUpdateManyWithoutTeams_superbowl_loserToteamsNestedInput
  superbowl_superbowl_winnerToteams?: Prisma.superbowlUncheckedUpdateManyWithoutTeams_superbowl_winnerToteamsNestedInput
}

export type teamsUpsertWithoutGames_games_awayToteamsInput = {
  update: Prisma.XOR<Prisma.teamsUpdateWithoutGames_games_awayToteamsInput, Prisma.teamsUncheckedUpdateWithoutGames_games_awayToteamsInput>
  create: Prisma.XOR<Prisma.teamsCreateWithoutGames_games_awayToteamsInput, Prisma.teamsUncheckedCreateWithoutGames_games_awayToteamsInput>
  where?: Prisma.teamsWhereInput
}

export type teamsUpdateToOneWithWhereWithoutGames_games_awayToteamsInput = {
  where?: Prisma.teamsWhereInput
  data: Prisma.XOR<Prisma.teamsUpdateWithoutGames_games_awayToteamsInput, Prisma.teamsUncheckedUpdateWithoutGames_games_awayToteamsInput>
}

export type teamsUpdateWithoutGames_games_awayToteamsInput = {
  abbrev?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  loc?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  conference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  primary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  secondary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tertiary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  games_games_homeToteams?: Prisma.gamesUpdateManyWithoutTeams_games_homeToteamsNestedInput
  picks?: Prisma.picksUpdateManyWithoutTeamsNestedInput
  superbowl_superbowl_loserToteams?: Prisma.superbowlUpdateManyWithoutTeams_superbowl_loserToteamsNestedInput
  superbowl_superbowl_winnerToteams?: Prisma.superbowlUpdateManyWithoutTeams_superbowl_winnerToteamsNestedInput
}

export type teamsUncheckedUpdateWithoutGames_games_awayToteamsInput = {
  teamid?: Prisma.IntFieldUpdateOperationsInput | number
  abbrev?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  loc?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  conference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  primary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  secondary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tertiary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  games_games_homeToteams?: Prisma.gamesUncheckedUpdateManyWithoutTeams_games_homeToteamsNestedInput
  picks?: Prisma.picksUncheckedUpdateManyWithoutTeamsNestedInput
  superbowl_superbowl_loserToteams?: Prisma.superbowlUncheckedUpdateManyWithoutTeams_superbowl_loserToteamsNestedInput
  superbowl_superbowl_winnerToteams?: Prisma.superbowlUncheckedUpdateManyWithoutTeams_superbowl_winnerToteamsNestedInput
}

export type teamsCreateWithoutPicksInput = {
  abbrev?: string | null
  loc: string
  name: string
  conference?: string | null
  primary_color?: string | null
  secondary_color?: string | null
  tertiary_color?: string | null
  games_games_homeToteams?: Prisma.gamesCreateNestedManyWithoutTeams_games_homeToteamsInput
  games_games_awayToteams?: Prisma.gamesCreateNestedManyWithoutTeams_games_awayToteamsInput
  superbowl_superbowl_loserToteams?: Prisma.superbowlCreateNestedManyWithoutTeams_superbowl_loserToteamsInput
  superbowl_superbowl_winnerToteams?: Prisma.superbowlCreateNestedManyWithoutTeams_superbowl_winnerToteamsInput
}

export type teamsUncheckedCreateWithoutPicksInput = {
  teamid?: number
  abbrev?: string | null
  loc: string
  name: string
  conference?: string | null
  primary_color?: string | null
  secondary_color?: string | null
  tertiary_color?: string | null
  games_games_homeToteams?: Prisma.gamesUncheckedCreateNestedManyWithoutTeams_games_homeToteamsInput
  games_games_awayToteams?: Prisma.gamesUncheckedCreateNestedManyWithoutTeams_games_awayToteamsInput
  superbowl_superbowl_loserToteams?: Prisma.superbowlUncheckedCreateNestedManyWithoutTeams_superbowl_loserToteamsInput
  superbowl_superbowl_winnerToteams?: Prisma.superbowlUncheckedCreateNestedManyWithoutTeams_superbowl_winnerToteamsInput
}

export type teamsCreateOrConnectWithoutPicksInput = {
  where: Prisma.teamsWhereUniqueInput
  create: Prisma.XOR<Prisma.teamsCreateWithoutPicksInput, Prisma.teamsUncheckedCreateWithoutPicksInput>
}

export type teamsUpsertWithoutPicksInput = {
  update: Prisma.XOR<Prisma.teamsUpdateWithoutPicksInput, Prisma.teamsUncheckedUpdateWithoutPicksInput>
  create: Prisma.XOR<Prisma.teamsCreateWithoutPicksInput, Prisma.teamsUncheckedCreateWithoutPicksInput>
  where?: Prisma.teamsWhereInput
}

export type teamsUpdateToOneWithWhereWithoutPicksInput = {
  where?: Prisma.teamsWhereInput
  data: Prisma.XOR<Prisma.teamsUpdateWithoutPicksInput, Prisma.teamsUncheckedUpdateWithoutPicksInput>
}

export type teamsUpdateWithoutPicksInput = {
  abbrev?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  loc?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  conference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  primary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  secondary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tertiary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  games_games_homeToteams?: Prisma.gamesUpdateManyWithoutTeams_games_homeToteamsNestedInput
  games_games_awayToteams?: Prisma.gamesUpdateManyWithoutTeams_games_awayToteamsNestedInput
  superbowl_superbowl_loserToteams?: Prisma.superbowlUpdateManyWithoutTeams_superbowl_loserToteamsNestedInput
  superbowl_superbowl_winnerToteams?: Prisma.superbowlUpdateManyWithoutTeams_superbowl_winnerToteamsNestedInput
}

export type teamsUncheckedUpdateWithoutPicksInput = {
  teamid?: Prisma.IntFieldUpdateOperationsInput | number
  abbrev?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  loc?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  conference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  primary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  secondary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tertiary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  games_games_homeToteams?: Prisma.gamesUncheckedUpdateManyWithoutTeams_games_homeToteamsNestedInput
  games_games_awayToteams?: Prisma.gamesUncheckedUpdateManyWithoutTeams_games_awayToteamsNestedInput
  superbowl_superbowl_loserToteams?: Prisma.superbowlUncheckedUpdateManyWithoutTeams_superbowl_loserToteamsNestedInput
  superbowl_superbowl_winnerToteams?: Prisma.superbowlUncheckedUpdateManyWithoutTeams_superbowl_winnerToteamsNestedInput
}

export type teamsCreateWithoutSuperbowl_superbowl_loserToteamsInput = {
  abbrev?: string | null
  loc: string
  name: string
  conference?: string | null
  primary_color?: string | null
  secondary_color?: string | null
  tertiary_color?: string | null
  games_games_homeToteams?: Prisma.gamesCreateNestedManyWithoutTeams_games_homeToteamsInput
  games_games_awayToteams?: Prisma.gamesCreateNestedManyWithoutTeams_games_awayToteamsInput
  picks?: Prisma.picksCreateNestedManyWithoutTeamsInput
  superbowl_superbowl_winnerToteams?: Prisma.superbowlCreateNestedManyWithoutTeams_superbowl_winnerToteamsInput
}

export type teamsUncheckedCreateWithoutSuperbowl_superbowl_loserToteamsInput = {
  teamid?: number
  abbrev?: string | null
  loc: string
  name: string
  conference?: string | null
  primary_color?: string | null
  secondary_color?: string | null
  tertiary_color?: string | null
  games_games_homeToteams?: Prisma.gamesUncheckedCreateNestedManyWithoutTeams_games_homeToteamsInput
  games_games_awayToteams?: Prisma.gamesUncheckedCreateNestedManyWithoutTeams_games_awayToteamsInput
  picks?: Prisma.picksUncheckedCreateNestedManyWithoutTeamsInput
  superbowl_superbowl_winnerToteams?: Prisma.superbowlUncheckedCreateNestedManyWithoutTeams_superbowl_winnerToteamsInput
}

export type teamsCreateOrConnectWithoutSuperbowl_superbowl_loserToteamsInput = {
  where: Prisma.teamsWhereUniqueInput
  create: Prisma.XOR<Prisma.teamsCreateWithoutSuperbowl_superbowl_loserToteamsInput, Prisma.teamsUncheckedCreateWithoutSuperbowl_superbowl_loserToteamsInput>
}

export type teamsCreateWithoutSuperbowl_superbowl_winnerToteamsInput = {
  abbrev?: string | null
  loc: string
  name: string
  conference?: string | null
  primary_color?: string | null
  secondary_color?: string | null
  tertiary_color?: string | null
  games_games_homeToteams?: Prisma.gamesCreateNestedManyWithoutTeams_games_homeToteamsInput
  games_games_awayToteams?: Prisma.gamesCreateNestedManyWithoutTeams_games_awayToteamsInput
  picks?: Prisma.picksCreateNestedManyWithoutTeamsInput
  superbowl_superbowl_loserToteams?: Prisma.superbowlCreateNestedManyWithoutTeams_superbowl_loserToteamsInput
}

export type teamsUncheckedCreateWithoutSuperbowl_superbowl_winnerToteamsInput = {
  teamid?: number
  abbrev?: string | null
  loc: string
  name: string
  conference?: string | null
  primary_color?: string | null
  secondary_color?: string | null
  tertiary_color?: string | null
  games_games_homeToteams?: Prisma.gamesUncheckedCreateNestedManyWithoutTeams_games_homeToteamsInput
  games_games_awayToteams?: Prisma.gamesUncheckedCreateNestedManyWithoutTeams_games_awayToteamsInput
  picks?: Prisma.picksUncheckedCreateNestedManyWithoutTeamsInput
  superbowl_superbowl_loserToteams?: Prisma.superbowlUncheckedCreateNestedManyWithoutTeams_superbowl_loserToteamsInput
}

export type teamsCreateOrConnectWithoutSuperbowl_superbowl_winnerToteamsInput = {
  where: Prisma.teamsWhereUniqueInput
  create: Prisma.XOR<Prisma.teamsCreateWithoutSuperbowl_superbowl_winnerToteamsInput, Prisma.teamsUncheckedCreateWithoutSuperbowl_superbowl_winnerToteamsInput>
}

export type teamsUpsertWithoutSuperbowl_superbowl_loserToteamsInput = {
  update: Prisma.XOR<Prisma.teamsUpdateWithoutSuperbowl_superbowl_loserToteamsInput, Prisma.teamsUncheckedUpdateWithoutSuperbowl_superbowl_loserToteamsInput>
  create: Prisma.XOR<Prisma.teamsCreateWithoutSuperbowl_superbowl_loserToteamsInput, Prisma.teamsUncheckedCreateWithoutSuperbowl_superbowl_loserToteamsInput>
  where?: Prisma.teamsWhereInput
}

export type teamsUpdateToOneWithWhereWithoutSuperbowl_superbowl_loserToteamsInput = {
  where?: Prisma.teamsWhereInput
  data: Prisma.XOR<Prisma.teamsUpdateWithoutSuperbowl_superbowl_loserToteamsInput, Prisma.teamsUncheckedUpdateWithoutSuperbowl_superbowl_loserToteamsInput>
}

export type teamsUpdateWithoutSuperbowl_superbowl_loserToteamsInput = {
  abbrev?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  loc?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  conference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  primary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  secondary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tertiary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  games_games_homeToteams?: Prisma.gamesUpdateManyWithoutTeams_games_homeToteamsNestedInput
  games_games_awayToteams?: Prisma.gamesUpdateManyWithoutTeams_games_awayToteamsNestedInput
  picks?: Prisma.picksUpdateManyWithoutTeamsNestedInput
  superbowl_superbowl_winnerToteams?: Prisma.superbowlUpdateManyWithoutTeams_superbowl_winnerToteamsNestedInput
}

export type teamsUncheckedUpdateWithoutSuperbowl_superbowl_loserToteamsInput = {
  teamid?: Prisma.IntFieldUpdateOperationsInput | number
  abbrev?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  loc?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  conference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  primary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  secondary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tertiary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  games_games_homeToteams?: Prisma.gamesUncheckedUpdateManyWithoutTeams_games_homeToteamsNestedInput
  games_games_awayToteams?: Prisma.gamesUncheckedUpdateManyWithoutTeams_games_awayToteamsNestedInput
  picks?: Prisma.picksUncheckedUpdateManyWithoutTeamsNestedInput
  superbowl_superbowl_winnerToteams?: Prisma.superbowlUncheckedUpdateManyWithoutTeams_superbowl_winnerToteamsNestedInput
}

export type teamsUpsertWithoutSuperbowl_superbowl_winnerToteamsInput = {
  update: Prisma.XOR<Prisma.teamsUpdateWithoutSuperbowl_superbowl_winnerToteamsInput, Prisma.teamsUncheckedUpdateWithoutSuperbowl_superbowl_winnerToteamsInput>
  create: Prisma.XOR<Prisma.teamsCreateWithoutSuperbowl_superbowl_winnerToteamsInput, Prisma.teamsUncheckedCreateWithoutSuperbowl_superbowl_winnerToteamsInput>
  where?: Prisma.teamsWhereInput
}

export type teamsUpdateToOneWithWhereWithoutSuperbowl_superbowl_winnerToteamsInput = {
  where?: Prisma.teamsWhereInput
  data: Prisma.XOR<Prisma.teamsUpdateWithoutSuperbowl_superbowl_winnerToteamsInput, Prisma.teamsUncheckedUpdateWithoutSuperbowl_superbowl_winnerToteamsInput>
}

export type teamsUpdateWithoutSuperbowl_superbowl_winnerToteamsInput = {
  abbrev?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  loc?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  conference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  primary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  secondary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tertiary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  games_games_homeToteams?: Prisma.gamesUpdateManyWithoutTeams_games_homeToteamsNestedInput
  games_games_awayToteams?: Prisma.gamesUpdateManyWithoutTeams_games_awayToteamsNestedInput
  picks?: Prisma.picksUpdateManyWithoutTeamsNestedInput
  superbowl_superbowl_loserToteams?: Prisma.superbowlUpdateManyWithoutTeams_superbowl_loserToteamsNestedInput
}

export type teamsUncheckedUpdateWithoutSuperbowl_superbowl_winnerToteamsInput = {
  teamid?: Prisma.IntFieldUpdateOperationsInput | number
  abbrev?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  loc?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  conference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  primary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  secondary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tertiary_color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  games_games_homeToteams?: Prisma.gamesUncheckedUpdateManyWithoutTeams_games_homeToteamsNestedInput
  games_games_awayToteams?: Prisma.gamesUncheckedUpdateManyWithoutTeams_games_awayToteamsNestedInput
  picks?: Prisma.picksUncheckedUpdateManyWithoutTeamsNestedInput
  superbowl_superbowl_loserToteams?: Prisma.superbowlUncheckedUpdateManyWithoutTeams_superbowl_loserToteamsNestedInput
}


/**
 * Count Type TeamsCountOutputType
 */

export type TeamsCountOutputType = {
  games_games_homeToteams: number
  games_games_awayToteams: number
  picks: number
  superbowl_superbowl_loserToteams: number
  superbowl_superbowl_winnerToteams: number
}

export type TeamsCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  games_games_homeToteams?: boolean | TeamsCountOutputTypeCountGames_games_homeToteamsArgs
  games_games_awayToteams?: boolean | TeamsCountOutputTypeCountGames_games_awayToteamsArgs
  picks?: boolean | TeamsCountOutputTypeCountPicksArgs
  superbowl_superbowl_loserToteams?: boolean | TeamsCountOutputTypeCountSuperbowl_superbowl_loserToteamsArgs
  superbowl_superbowl_winnerToteams?: boolean | TeamsCountOutputTypeCountSuperbowl_superbowl_winnerToteamsArgs
}

/**
 * TeamsCountOutputType without action
 */
export type TeamsCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TeamsCountOutputType
   */
  select?: Prisma.TeamsCountOutputTypeSelect<ExtArgs> | null
}

/**
 * TeamsCountOutputType without action
 */
export type TeamsCountOutputTypeCountGames_games_homeToteamsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.gamesWhereInput
}

/**
 * TeamsCountOutputType without action
 */
export type TeamsCountOutputTypeCountGames_games_awayToteamsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.gamesWhereInput
}

/**
 * TeamsCountOutputType without action
 */
export type TeamsCountOutputTypeCountPicksArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.picksWhereInput
}

/**
 * TeamsCountOutputType without action
 */
export type TeamsCountOutputTypeCountSuperbowl_superbowl_loserToteamsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.superbowlWhereInput
}

/**
 * TeamsCountOutputType without action
 */
export type TeamsCountOutputTypeCountSuperbowl_superbowl_winnerToteamsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.superbowlWhereInput
}


export type teamsSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  teamid?: boolean
  abbrev?: boolean
  loc?: boolean
  name?: boolean
  conference?: boolean
  primary_color?: boolean
  secondary_color?: boolean
  tertiary_color?: boolean
  games_games_homeToteams?: boolean | Prisma.teams$games_games_homeToteamsArgs<ExtArgs>
  games_games_awayToteams?: boolean | Prisma.teams$games_games_awayToteamsArgs<ExtArgs>
  picks?: boolean | Prisma.teams$picksArgs<ExtArgs>
  superbowl_superbowl_loserToteams?: boolean | Prisma.teams$superbowl_superbowl_loserToteamsArgs<ExtArgs>
  superbowl_superbowl_winnerToteams?: boolean | Prisma.teams$superbowl_superbowl_winnerToteamsArgs<ExtArgs>
  _count?: boolean | Prisma.TeamsCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["teams"]>

export type teamsSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  teamid?: boolean
  abbrev?: boolean
  loc?: boolean
  name?: boolean
  conference?: boolean
  primary_color?: boolean
  secondary_color?: boolean
  tertiary_color?: boolean
}, ExtArgs["result"]["teams"]>

export type teamsSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  teamid?: boolean
  abbrev?: boolean
  loc?: boolean
  name?: boolean
  conference?: boolean
  primary_color?: boolean
  secondary_color?: boolean
  tertiary_color?: boolean
}, ExtArgs["result"]["teams"]>

export type teamsSelectScalar = {
  teamid?: boolean
  abbrev?: boolean
  loc?: boolean
  name?: boolean
  conference?: boolean
  primary_color?: boolean
  secondary_color?: boolean
  tertiary_color?: boolean
}

export type teamsOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"teamid" | "abbrev" | "loc" | "name" | "conference" | "primary_color" | "secondary_color" | "tertiary_color", ExtArgs["result"]["teams"]>
export type teamsInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  games_games_homeToteams?: boolean | Prisma.teams$games_games_homeToteamsArgs<ExtArgs>
  games_games_awayToteams?: boolean | Prisma.teams$games_games_awayToteamsArgs<ExtArgs>
  picks?: boolean | Prisma.teams$picksArgs<ExtArgs>
  superbowl_superbowl_loserToteams?: boolean | Prisma.teams$superbowl_superbowl_loserToteamsArgs<ExtArgs>
  superbowl_superbowl_winnerToteams?: boolean | Prisma.teams$superbowl_superbowl_winnerToteamsArgs<ExtArgs>
  _count?: boolean | Prisma.TeamsCountOutputTypeDefaultArgs<ExtArgs>
}
export type teamsIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type teamsIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $teamsPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "teams"
  objects: {
    games_games_homeToteams: Prisma.$gamesPayload<ExtArgs>[]
    games_games_awayToteams: Prisma.$gamesPayload<ExtArgs>[]
    picks: Prisma.$picksPayload<ExtArgs>[]
    superbowl_superbowl_loserToteams: Prisma.$superbowlPayload<ExtArgs>[]
    superbowl_superbowl_winnerToteams: Prisma.$superbowlPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    teamid: number
    abbrev: string | null
    loc: string
    name: string
    conference: string | null
    primary_color: string | null
    secondary_color: string | null
    tertiary_color: string | null
  }, ExtArgs["result"]["teams"]>
  composites: {}
}

export type teamsGetPayload<S extends boolean | null | undefined | teamsDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$teamsPayload, S>

export type teamsCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<teamsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: TeamsCountAggregateInputType | true
  }

export interface teamsDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['teams'], meta: { name: 'teams' } }
  /**
   * Find zero or one Teams that matches the filter.
   * @param {teamsFindUniqueArgs} args - Arguments to find a Teams
   * @example
   * // Get one Teams
   * const teams = await prisma.teams.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends teamsFindUniqueArgs>(args: Prisma.SelectSubset<T, teamsFindUniqueArgs<ExtArgs>>): Prisma.Prisma__teamsClient<runtime.Types.Result.GetResult<Prisma.$teamsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Teams that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {teamsFindUniqueOrThrowArgs} args - Arguments to find a Teams
   * @example
   * // Get one Teams
   * const teams = await prisma.teams.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends teamsFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, teamsFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__teamsClient<runtime.Types.Result.GetResult<Prisma.$teamsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Teams that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {teamsFindFirstArgs} args - Arguments to find a Teams
   * @example
   * // Get one Teams
   * const teams = await prisma.teams.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends teamsFindFirstArgs>(args?: Prisma.SelectSubset<T, teamsFindFirstArgs<ExtArgs>>): Prisma.Prisma__teamsClient<runtime.Types.Result.GetResult<Prisma.$teamsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Teams that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {teamsFindFirstOrThrowArgs} args - Arguments to find a Teams
   * @example
   * // Get one Teams
   * const teams = await prisma.teams.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends teamsFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, teamsFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__teamsClient<runtime.Types.Result.GetResult<Prisma.$teamsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Teams that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {teamsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Teams
   * const teams = await prisma.teams.findMany()
   * 
   * // Get first 10 Teams
   * const teams = await prisma.teams.findMany({ take: 10 })
   * 
   * // Only select the `teamid`
   * const teamsWithTeamidOnly = await prisma.teams.findMany({ select: { teamid: true } })
   * 
   */
  findMany<T extends teamsFindManyArgs>(args?: Prisma.SelectSubset<T, teamsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$teamsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Teams.
   * @param {teamsCreateArgs} args - Arguments to create a Teams.
   * @example
   * // Create one Teams
   * const Teams = await prisma.teams.create({
   *   data: {
   *     // ... data to create a Teams
   *   }
   * })
   * 
   */
  create<T extends teamsCreateArgs>(args: Prisma.SelectSubset<T, teamsCreateArgs<ExtArgs>>): Prisma.Prisma__teamsClient<runtime.Types.Result.GetResult<Prisma.$teamsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Teams.
   * @param {teamsCreateManyArgs} args - Arguments to create many Teams.
   * @example
   * // Create many Teams
   * const teams = await prisma.teams.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends teamsCreateManyArgs>(args?: Prisma.SelectSubset<T, teamsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Teams and returns the data saved in the database.
   * @param {teamsCreateManyAndReturnArgs} args - Arguments to create many Teams.
   * @example
   * // Create many Teams
   * const teams = await prisma.teams.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Teams and only return the `teamid`
   * const teamsWithTeamidOnly = await prisma.teams.createManyAndReturn({
   *   select: { teamid: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends teamsCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, teamsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$teamsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Teams.
   * @param {teamsDeleteArgs} args - Arguments to delete one Teams.
   * @example
   * // Delete one Teams
   * const Teams = await prisma.teams.delete({
   *   where: {
   *     // ... filter to delete one Teams
   *   }
   * })
   * 
   */
  delete<T extends teamsDeleteArgs>(args: Prisma.SelectSubset<T, teamsDeleteArgs<ExtArgs>>): Prisma.Prisma__teamsClient<runtime.Types.Result.GetResult<Prisma.$teamsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Teams.
   * @param {teamsUpdateArgs} args - Arguments to update one Teams.
   * @example
   * // Update one Teams
   * const teams = await prisma.teams.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends teamsUpdateArgs>(args: Prisma.SelectSubset<T, teamsUpdateArgs<ExtArgs>>): Prisma.Prisma__teamsClient<runtime.Types.Result.GetResult<Prisma.$teamsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Teams.
   * @param {teamsDeleteManyArgs} args - Arguments to filter Teams to delete.
   * @example
   * // Delete a few Teams
   * const { count } = await prisma.teams.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends teamsDeleteManyArgs>(args?: Prisma.SelectSubset<T, teamsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Teams.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {teamsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Teams
   * const teams = await prisma.teams.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends teamsUpdateManyArgs>(args: Prisma.SelectSubset<T, teamsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Teams and returns the data updated in the database.
   * @param {teamsUpdateManyAndReturnArgs} args - Arguments to update many Teams.
   * @example
   * // Update many Teams
   * const teams = await prisma.teams.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Teams and only return the `teamid`
   * const teamsWithTeamidOnly = await prisma.teams.updateManyAndReturn({
   *   select: { teamid: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends teamsUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, teamsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$teamsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Teams.
   * @param {teamsUpsertArgs} args - Arguments to update or create a Teams.
   * @example
   * // Update or create a Teams
   * const teams = await prisma.teams.upsert({
   *   create: {
   *     // ... data to create a Teams
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Teams we want to update
   *   }
   * })
   */
  upsert<T extends teamsUpsertArgs>(args: Prisma.SelectSubset<T, teamsUpsertArgs<ExtArgs>>): Prisma.Prisma__teamsClient<runtime.Types.Result.GetResult<Prisma.$teamsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Teams.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {teamsCountArgs} args - Arguments to filter Teams to count.
   * @example
   * // Count the number of Teams
   * const count = await prisma.teams.count({
   *   where: {
   *     // ... the filter for the Teams we want to count
   *   }
   * })
  **/
  count<T extends teamsCountArgs>(
    args?: Prisma.Subset<T, teamsCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], TeamsCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Teams.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TeamsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends TeamsAggregateArgs>(args: Prisma.Subset<T, TeamsAggregateArgs>): Prisma.PrismaPromise<GetTeamsAggregateType<T>>

  /**
   * Group by Teams.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {teamsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends teamsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: teamsGroupByArgs['orderBy'] }
      : { orderBy?: teamsGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, teamsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTeamsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the teams model
 */
readonly fields: teamsFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for teams.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__teamsClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  games_games_homeToteams<T extends Prisma.teams$games_games_homeToteamsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.teams$games_games_homeToteamsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$gamesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  games_games_awayToteams<T extends Prisma.teams$games_games_awayToteamsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.teams$games_games_awayToteamsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$gamesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  picks<T extends Prisma.teams$picksArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.teams$picksArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$picksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  superbowl_superbowl_loserToteams<T extends Prisma.teams$superbowl_superbowl_loserToteamsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.teams$superbowl_superbowl_loserToteamsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$superbowlPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  superbowl_superbowl_winnerToteams<T extends Prisma.teams$superbowl_superbowl_winnerToteamsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.teams$superbowl_superbowl_winnerToteamsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$superbowlPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the teams model
 */
export interface teamsFieldRefs {
  readonly teamid: Prisma.FieldRef<"teams", 'Int'>
  readonly abbrev: Prisma.FieldRef<"teams", 'String'>
  readonly loc: Prisma.FieldRef<"teams", 'String'>
  readonly name: Prisma.FieldRef<"teams", 'String'>
  readonly conference: Prisma.FieldRef<"teams", 'String'>
  readonly primary_color: Prisma.FieldRef<"teams", 'String'>
  readonly secondary_color: Prisma.FieldRef<"teams", 'String'>
  readonly tertiary_color: Prisma.FieldRef<"teams", 'String'>
}
    

// Custom InputTypes
/**
 * teams findUnique
 */
export type teamsFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the teams
   */
  select?: Prisma.teamsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the teams
   */
  omit?: Prisma.teamsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.teamsInclude<ExtArgs> | null
  /**
   * Filter, which teams to fetch.
   */
  where: Prisma.teamsWhereUniqueInput
}

/**
 * teams findUniqueOrThrow
 */
export type teamsFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the teams
   */
  select?: Prisma.teamsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the teams
   */
  omit?: Prisma.teamsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.teamsInclude<ExtArgs> | null
  /**
   * Filter, which teams to fetch.
   */
  where: Prisma.teamsWhereUniqueInput
}

/**
 * teams findFirst
 */
export type teamsFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the teams
   */
  select?: Prisma.teamsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the teams
   */
  omit?: Prisma.teamsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.teamsInclude<ExtArgs> | null
  /**
   * Filter, which teams to fetch.
   */
  where?: Prisma.teamsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of teams to fetch.
   */
  orderBy?: Prisma.teamsOrderByWithRelationInput | Prisma.teamsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for teams.
   */
  cursor?: Prisma.teamsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` teams from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` teams.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of teams.
   */
  distinct?: Prisma.TeamsScalarFieldEnum | Prisma.TeamsScalarFieldEnum[]
}

/**
 * teams findFirstOrThrow
 */
export type teamsFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the teams
   */
  select?: Prisma.teamsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the teams
   */
  omit?: Prisma.teamsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.teamsInclude<ExtArgs> | null
  /**
   * Filter, which teams to fetch.
   */
  where?: Prisma.teamsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of teams to fetch.
   */
  orderBy?: Prisma.teamsOrderByWithRelationInput | Prisma.teamsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for teams.
   */
  cursor?: Prisma.teamsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` teams from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` teams.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of teams.
   */
  distinct?: Prisma.TeamsScalarFieldEnum | Prisma.TeamsScalarFieldEnum[]
}

/**
 * teams findMany
 */
export type teamsFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the teams
   */
  select?: Prisma.teamsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the teams
   */
  omit?: Prisma.teamsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.teamsInclude<ExtArgs> | null
  /**
   * Filter, which teams to fetch.
   */
  where?: Prisma.teamsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of teams to fetch.
   */
  orderBy?: Prisma.teamsOrderByWithRelationInput | Prisma.teamsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing teams.
   */
  cursor?: Prisma.teamsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` teams from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` teams.
   */
  skip?: number
  distinct?: Prisma.TeamsScalarFieldEnum | Prisma.TeamsScalarFieldEnum[]
}

/**
 * teams create
 */
export type teamsCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the teams
   */
  select?: Prisma.teamsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the teams
   */
  omit?: Prisma.teamsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.teamsInclude<ExtArgs> | null
  /**
   * The data needed to create a teams.
   */
  data: Prisma.XOR<Prisma.teamsCreateInput, Prisma.teamsUncheckedCreateInput>
}

/**
 * teams createMany
 */
export type teamsCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many teams.
   */
  data: Prisma.teamsCreateManyInput | Prisma.teamsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * teams createManyAndReturn
 */
export type teamsCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the teams
   */
  select?: Prisma.teamsSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the teams
   */
  omit?: Prisma.teamsOmit<ExtArgs> | null
  /**
   * The data used to create many teams.
   */
  data: Prisma.teamsCreateManyInput | Prisma.teamsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * teams update
 */
export type teamsUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the teams
   */
  select?: Prisma.teamsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the teams
   */
  omit?: Prisma.teamsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.teamsInclude<ExtArgs> | null
  /**
   * The data needed to update a teams.
   */
  data: Prisma.XOR<Prisma.teamsUpdateInput, Prisma.teamsUncheckedUpdateInput>
  /**
   * Choose, which teams to update.
   */
  where: Prisma.teamsWhereUniqueInput
}

/**
 * teams updateMany
 */
export type teamsUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update teams.
   */
  data: Prisma.XOR<Prisma.teamsUpdateManyMutationInput, Prisma.teamsUncheckedUpdateManyInput>
  /**
   * Filter which teams to update
   */
  where?: Prisma.teamsWhereInput
  /**
   * Limit how many teams to update.
   */
  limit?: number
}

/**
 * teams updateManyAndReturn
 */
export type teamsUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the teams
   */
  select?: Prisma.teamsSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the teams
   */
  omit?: Prisma.teamsOmit<ExtArgs> | null
  /**
   * The data used to update teams.
   */
  data: Prisma.XOR<Prisma.teamsUpdateManyMutationInput, Prisma.teamsUncheckedUpdateManyInput>
  /**
   * Filter which teams to update
   */
  where?: Prisma.teamsWhereInput
  /**
   * Limit how many teams to update.
   */
  limit?: number
}

/**
 * teams upsert
 */
export type teamsUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the teams
   */
  select?: Prisma.teamsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the teams
   */
  omit?: Prisma.teamsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.teamsInclude<ExtArgs> | null
  /**
   * The filter to search for the teams to update in case it exists.
   */
  where: Prisma.teamsWhereUniqueInput
  /**
   * In case the teams found by the `where` argument doesn't exist, create a new teams with this data.
   */
  create: Prisma.XOR<Prisma.teamsCreateInput, Prisma.teamsUncheckedCreateInput>
  /**
   * In case the teams was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.teamsUpdateInput, Prisma.teamsUncheckedUpdateInput>
}

/**
 * teams delete
 */
export type teamsDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the teams
   */
  select?: Prisma.teamsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the teams
   */
  omit?: Prisma.teamsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.teamsInclude<ExtArgs> | null
  /**
   * Filter which teams to delete.
   */
  where: Prisma.teamsWhereUniqueInput
}

/**
 * teams deleteMany
 */
export type teamsDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which teams to delete
   */
  where?: Prisma.teamsWhereInput
  /**
   * Limit how many teams to delete.
   */
  limit?: number
}

/**
 * teams.games_games_homeToteams
 */
export type teams$games_games_homeToteamsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the games
   */
  select?: Prisma.gamesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the games
   */
  omit?: Prisma.gamesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.gamesInclude<ExtArgs> | null
  where?: Prisma.gamesWhereInput
  orderBy?: Prisma.gamesOrderByWithRelationInput | Prisma.gamesOrderByWithRelationInput[]
  cursor?: Prisma.gamesWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.GamesScalarFieldEnum | Prisma.GamesScalarFieldEnum[]
}

/**
 * teams.games_games_awayToteams
 */
export type teams$games_games_awayToteamsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the games
   */
  select?: Prisma.gamesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the games
   */
  omit?: Prisma.gamesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.gamesInclude<ExtArgs> | null
  where?: Prisma.gamesWhereInput
  orderBy?: Prisma.gamesOrderByWithRelationInput | Prisma.gamesOrderByWithRelationInput[]
  cursor?: Prisma.gamesWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.GamesScalarFieldEnum | Prisma.GamesScalarFieldEnum[]
}

/**
 * teams.picks
 */
export type teams$picksArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the picks
   */
  select?: Prisma.picksSelect<ExtArgs> | null
  /**
   * Omit specific fields from the picks
   */
  omit?: Prisma.picksOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.picksInclude<ExtArgs> | null
  where?: Prisma.picksWhereInput
  orderBy?: Prisma.picksOrderByWithRelationInput | Prisma.picksOrderByWithRelationInput[]
  cursor?: Prisma.picksWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PicksScalarFieldEnum | Prisma.PicksScalarFieldEnum[]
}

/**
 * teams.superbowl_superbowl_loserToteams
 */
export type teams$superbowl_superbowl_loserToteamsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the superbowl
   */
  select?: Prisma.superbowlSelect<ExtArgs> | null
  /**
   * Omit specific fields from the superbowl
   */
  omit?: Prisma.superbowlOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.superbowlInclude<ExtArgs> | null
  where?: Prisma.superbowlWhereInput
  orderBy?: Prisma.superbowlOrderByWithRelationInput | Prisma.superbowlOrderByWithRelationInput[]
  cursor?: Prisma.superbowlWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.SuperbowlScalarFieldEnum | Prisma.SuperbowlScalarFieldEnum[]
}

/**
 * teams.superbowl_superbowl_winnerToteams
 */
export type teams$superbowl_superbowl_winnerToteamsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the superbowl
   */
  select?: Prisma.superbowlSelect<ExtArgs> | null
  /**
   * Omit specific fields from the superbowl
   */
  omit?: Prisma.superbowlOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.superbowlInclude<ExtArgs> | null
  where?: Prisma.superbowlWhereInput
  orderBy?: Prisma.superbowlOrderByWithRelationInput | Prisma.superbowlOrderByWithRelationInput[]
  cursor?: Prisma.superbowlWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.SuperbowlScalarFieldEnum | Prisma.SuperbowlScalarFieldEnum[]
}

/**
 * teams without action
 */
export type teamsDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the teams
   */
  select?: Prisma.teamsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the teams
   */
  omit?: Prisma.teamsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.teamsInclude<ExtArgs> | null
}
